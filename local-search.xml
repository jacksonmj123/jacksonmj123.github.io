<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>自动化脚本安装配置OPENVPN</title>
    <link href="/2022/05/28/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEOPENVPN/"/>
    <url>/2022/05/28/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEOPENVPN/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author: chenmeng</span><br><span class="hljs-comment">#QQ: 903575406</span><br><span class="hljs-comment">#Date: 2022-05-28</span><br><span class="hljs-comment">#FileName： installovpn.sh</span><br><span class="hljs-comment">#Description： A test script</span><br><span class="hljs-comment">#Copyright (C): 2022 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br>red=<span class="hljs-string">&quot;\e[1;31m&quot;</span><br>end=<span class="hljs-string">&quot;\e[0;m&quot;</span><br>ye=<span class="hljs-string">&quot;\e[1;33m&quot;</span><br>con=<span class="hljs-string">&quot;1&quot;</span><br>yum install -y openvpn easy-rsa &amp;&gt;/dev/null || &#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 安装失败，请重试<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-built_in">cp</span> /usr/share/doc/openvpn-2.4.12/sample/sample-config-files/server.conf /etc/openvpn/ &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;生成服务器配置文件&quot;</span> || &#123; <span class="hljs-built_in">echo</span><span class="hljs-string">&quot;拷贝失败。请重试&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-built_in">mkdir</span> /etc/openvpn/easy-rsa-server<br><span class="hljs-built_in">cp</span> -r /usr/share/easy-rsa/* /etc/openvpn/easy-rsa-server/ &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;准备证书签发相关文件&quot;</span><br><span class="hljs-built_in">cp</span> /usr/share/doc/easy-rsa-3.0.8/vars.example  /etc/openvpn/easy-rsa-server/3/vars &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;准备签发证书相关变量的配置文件&quot;</span><br>sed -i <span class="hljs-string">&#x27;/EASYRSA_CA_EXPIRE/a\set_var EASYRSA_CA_EXPIRE 3650&#x27;</span> /etc/openvpn/easy-rsa-server/3/vars &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;自签名证书有效期修改为10年&quot;</span><br>sed -i <span class="hljs-string">&#x27;/EASYRSA_CERT_EXPIRE/a\set_var EASYRSA_CERT_EXPIRE 3650&#x27;</span> /etc/openvpn/easy-rsa-server/3/vars &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;服务器证书有效期修改为10年&quot;</span><br>./easyrsa &amp;&gt; /dev/null<br><span class="hljs-built_in">cd</span> /etc/openvpn/easy-rsa-server/3/<br>./easyrsa init-pki &amp;&gt;/dev/null &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;生成PKI目录和相关文件&quot;</span><br>./easyrsa build-ca nopass &lt;&lt;!<br><br>!<br><span class="hljs-keyword">if</span> [ $? = 0 ] ;<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;生成自签名证书&quot;</span><br><span class="hljs-keyword">else</span> <br>&#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 生成自签名证书失败,请重试<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-keyword">fi</span><br>./easyrsa gen-req server nopass &lt;&lt;!<br><span class="hljs-built_in">yes</span><br><br>!<br><span class="hljs-keyword">if</span> [ $? = 0 ] ;<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;生成服务器私钥和证书申请&quot;</span><br><span class="hljs-keyword">else</span><br>&#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 生成服务器私钥失败,请重试<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-keyword">fi</span><br>./easyrsa sign server server &lt;&lt;!<br><span class="hljs-built_in">yes</span><br>!<br><span class="hljs-keyword">if</span> [ $? = 0 ] ;<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;颁发服务端证书&quot;</span><br><span class="hljs-keyword">else</span><br>&#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 服务器证书颁发失败,请重试<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ye</span> 正在生成德芙赫尔曼密钥，请耐心等待<span class="hljs-variable">$end</span>&quot;</span><br>./easyrsa gen-dh &amp;&gt; /dev/null<br><span class="hljs-keyword">if</span> [ $? = 0 ] ;<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;密钥生成成功&quot;</span><br><span class="hljs-keyword">else</span><br>&#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 密钥生成失败,请重试<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-keyword">fi</span><br>sed -ri <span class="hljs-string">&#x27;s/(^set.*) (3650)/\1 200/&#x27;</span> /etc/openvpn/easy-rsa-server/3/vars &amp;&amp; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 服务器证书有效期已经修改为200天<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-built_in">mkdir</span> /etc/openvpn/easy-rsa-client &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;创建客户端目录&quot;</span><br><span class="hljs-built_in">cp</span> -r /usr/share/easy-rsa/* /etc/openvpn/easy-rsa-client/<br><span class="hljs-built_in">cd</span> /etc/openvpn/easy-rsa-client/3<br>./easyrsa init-pki &amp;&gt;/dev/null &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;生成客户端PKI目录&quot;</span> || &#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 生成PKI目录失败,请重试<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-built_in">cp</span> /usr/share/doc/easy-rsa-3.0.8/vars.example /etc/openvpn/easy-rsa-client/3/vars<br>./easyrsa gen-req cm nopass &lt;&lt;!<br><br>!<br><span class="hljs-keyword">if</span> [ $? = 0 ] ;<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;生成名为cm的客户端密钥和证书申请文件成功&quot;</span><br><span class="hljs-keyword">else</span><br>&#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;客户端密钥生成失败,请重试&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">cd</span> /etc/openvpn/easy-rsa-server/3<br>./easyrsa import-req /etc/openvpn/easy-rsa-client/3/pki/reqs/cm.req cm &amp;&gt;/dev/null<br>./easyrsa sign client cm &lt;&lt;!<br><span class="hljs-built_in">yes</span><br>!<br><span class="hljs-keyword">if</span> [ $? = 0 ] ;<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;签发客户端证书&quot;</span><br><span class="hljs-keyword">else</span><br>&#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 客户端证书签发失败<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ye</span> 拷贝CA和服务器证书相关文件至etc/openvpn/certs目录下<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-built_in">mkdir</span> /etc/openvpn/certs<br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/ca.crt /etc/openvpn/certs/<br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/issued/server.crt /etc/openvpn/certs/<br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/private/server.key /etc/openvpn/certs/<br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/dh.pem /etc/openvpn/certs/<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ye</span> 拷贝用户私钥和证书相关文件至/etc/openvpn/client/user目录下<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-built_in">mkdir</span> /etc/openvpn/client/user<br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/issued/cm.crt /etc/openvpn/client/user/<br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/ca.crt /etc/openvpn/client/user/<br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-client/3/pki/private/cm.key /etc/openvpn/client/user/<br><span class="hljs-built_in">cd</span> /etc/openvpn/<br><span class="hljs-built_in">mv</span> server.conf server.conf.bak<br><span class="hljs-built_in">touch</span> server.conf<br><span class="hljs-built_in">mkdir</span> /var/log/openvpn<br><span class="hljs-built_in">cat</span> &gt;server.conf &lt;&lt;!<br>port 1194<br>proto tcp<br>dev tun<br>ca /etc/openvpn/certs/ca.crt<br>cert /etc/openvpn/certs/server.crt<br>key /etc/openvpn/certs/server.key <span class="hljs-comment"># This file should be kept secret</span><br>dh /etc/openvpn/certs/dh.pem<br>keepalive 10 120<br>cipher AES-256-CBC<br>compress lz4-v2<br>push <span class="hljs-string">&quot;compress lz4-v2&quot;</span><br>max-clients 2048<br>user openvpn<br>group openvpn<br>status /var/log/openvpn/openvpn-status.log<br>log-append /var/log/openvpn/openvpn.log<br>verb 3<br>mute 20<br>!<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请配置VPN地址池(如10.8.0.0): &quot;</span> pool<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入地址池范围(如255.255.255.0): &quot;</span> fw<br><span class="hljs-built_in">cat</span> &gt;&gt;/etc/openvpn/server.conf &lt;&lt;!<br>server <span class="hljs-variable">$pool</span> <span class="hljs-variable">$fw</span><br>!<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;输入“1”开始配置内部路由，若想退出请输入“0”: &quot;</span> i<br><span class="hljs-keyword">while</span> [ <span class="hljs-variable">$i</span> -eq <span class="hljs-variable">$con</span> ] ;<span class="hljs-keyword">do</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;输入要访问的内部网段(这边懒得限定格式了，你输错了我可不管了): &quot;</span> net<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;输入掩码(非cidr表示法,只能输255.0.0.0这种格式的，我没限定格式，你输错了我可不管): &quot;</span> mask<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;继续输入请按“1”，退出请按“0”: &quot;</span> i<br><span class="hljs-built_in">cat</span> &gt;&gt;/etc/openvpn/server.conf &lt;&lt;!<br>push <span class="hljs-string">&quot;route <span class="hljs-variable">$net</span> <span class="hljs-variable">$mask</span>&quot;</span><br>!<br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ye</span> 路由配置完毕<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;需要推送内网DNS吗?需要请按“1”,不需要请按“0”: &quot;</span> i<br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$i</span> -eq <span class="hljs-variable">$con</span> ] ;<span class="hljs-keyword">then</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;输入内部DNS: &quot;</span> dns<br><span class="hljs-built_in">cat</span> &gt;&gt;/etc/openvpn/server.conf &lt;&lt;!<br>push <span class="hljs-string">&quot;dhcp-option DNS <span class="hljs-variable">$dns</span>&quot;</span><br>!<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ye</span> 开始准备防护墙规则<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-built_in">echo</span> net.ipv4.ip_forward = 1 &gt;&gt; /etc/sysctl.conf<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;开始配置NAT规则,请输入VPN地址池(格式为x.x.x.x/x CIDR表示法): &quot;</span> pool1<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;iptables -t nat -A POSTROUTING -s <span class="hljs-variable">$pool1</span> -j MASQUERADE&quot;</span> &gt;&gt; /etc/rc.d/rc.local<br><span class="hljs-built_in">chmod</span> +x /etc/rc.d/rc.local<br>/etc/rc.d/rc.local &amp;&amp; <span class="hljs-built_in">echo</span> 防护墙规则配置完毕<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$ye</span> 启动OPENVPN服务<span class="hljs-variable">$end</span>&quot;</span><br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> --now openvpn@server &amp;&gt;/dev/null &amp;&amp; <span class="hljs-built_in">echo</span> 服务启动成功 || &#123; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 服务启动失败,使用“systemctl status openvpn@server”查看问题<span class="hljs-variable">$end</span>&quot;</span> ;<span class="hljs-built_in">exit</span>;&#125;<br></code></pre></td></tr></table></figure><p>一键生成客户端密钥和配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author: chenmeng</span><br><span class="hljs-comment">#QQ: 903575406</span><br><span class="hljs-comment">#Date: 2022-05-29</span><br><span class="hljs-comment">#FileName： client.sh</span><br><span class="hljs-comment">#Description： A test script</span><br><span class="hljs-comment">#Copyright (C): 2022 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br>fm=<span class="hljs-string">&quot;([a-z][0-9]|[a-z])+&quot;</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入申请用户(只能以字母开头，不支持中文输入): &quot;</span> name<br><span class="hljs-keyword">while</span> [[ ! <span class="hljs-variable">$name</span> =~ <span class="hljs-variable">$fm</span> ]]; <span class="hljs-keyword">do</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;格式错了，只能以字母开头，不能输入中文: &quot;</span> name<br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">cd</span> /etc/openvpn/easy-rsa-client/3<br>./easyrsa gen-req <span class="hljs-variable">$name</span> nopass &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br><span class="hljs-string">EOF</span><br><span class="hljs-built_in">cd</span> /etc/openvpn/easy-rsa-server/3<br>./easyrsa import-req /etc/openvpn/easy-rsa-client/3/pki/reqs/<span class="hljs-variable">$name</span>\.req <span class="hljs-variable">$name</span><br>./easyrsa sign client <span class="hljs-variable">$name</span> &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">yes</span><br><span class="hljs-string">EOF</span><br><span class="hljs-built_in">mkdir</span> /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br><span class="hljs-built_in">cd</span> /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br><span class="hljs-built_in">touch</span> <span class="hljs-variable">$name</span>\.ovpn<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;输入公网ip: &quot;</span> ip1<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;输入公网端口: &quot;</span> <span class="hljs-keyword">if</span><br><span class="hljs-built_in">cat</span> &gt;<span class="hljs-variable">$name</span>\.ovpn &lt;&lt;<span class="hljs-string">eof</span><br><span class="hljs-string">client</span><br><span class="hljs-string">dev tun</span><br><span class="hljs-string">proto tcp</span><br><span class="hljs-string">remote $ip1 $if</span><br><span class="hljs-string">resolv-retry infinite</span><br><span class="hljs-string">nobind</span><br><span class="hljs-string">#persist-key</span><br><span class="hljs-string">#persist-tun</span><br><span class="hljs-string">ca ca.crt</span><br><span class="hljs-string">cert $name.crt</span><br><span class="hljs-string">key $name.key</span><br><span class="hljs-string">remote-cert-tls server</span><br><span class="hljs-string">tls-auth ta.key 1</span><br><span class="hljs-string">cipher AES-256-CBC</span><br><span class="hljs-string">verb 3</span><br><span class="hljs-string">compress lz4-v2</span><br><span class="hljs-string">eof</span><br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-client/3/pki/private/<span class="hljs-variable">$name</span>\.key /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/issued/<span class="hljs-variable">$name</span>\.crt /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br><span class="hljs-built_in">cp</span> /etc/openvpn/easy-rsa-server/3/pki/ca.crt /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br><span class="hljs-built_in">cp</span> /etc/openvpn/certs/ta.key /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br><span class="hljs-built_in">cd</span> /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br>tar cf <span class="hljs-variable">$name</span>\.tar ./ &amp;&gt;/dev/null &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;文件已打包放至/etc/openvpn/client/user/$name目录下&#x27;</span><br><br></code></pre></td></tr></table></figure><p>一键吊销用户证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入需要吊销证书的人员: &quot;</span> name<br><span class="hljs-built_in">cd</span> /etc/openvpn/easy-rsa-server/3/<br>./easyrsa revoke <span class="hljs-variable">$name</span> &lt;&lt;!<br><span class="hljs-built_in">yes</span><br>!<br>./easyrsa gen-crl<br>systemctl restart openvpn@server<br>sed -i <span class="hljs-string">&quot;/CN=<span class="hljs-variable">$name</span>/d&quot;</span> /etc/openvpn/easy-rsa-server/3/pki/index.txt<br><span class="hljs-built_in">rm</span> -f /etc/openvpn/easy-rsa-client/3/pki/private/<span class="hljs-variable">$name</span>.key<br><span class="hljs-built_in">rm</span> -f /etc/openvpn/easy-rsa-client/3/pki/reqs/<span class="hljs-variable">$name</span>.req<br><span class="hljs-built_in">rm</span> -f /etc/openvpn/easy-rsa-server/3/pki/reqs/<span class="hljs-variable">$name</span>.req<br><span class="hljs-built_in">rm</span> -f /etc/openvpn/easy-rsa-server/3/pki/issued/<span class="hljs-variable">$name</span>.crt<br><span class="hljs-built_in">rm</span> -rf /etc/openvpn/client/user/<span class="hljs-variable">$name</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>VPN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享4</title>
    <link href="/2022/05/19/%E5%88%86%E4%BA%AB4/"/>
    <url>/2022/05/19/%E5%88%86%E4%BA%AB4/</url>
    
    <content type="html"><![CDATA[<p>netstat -n | awk ‘/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}’<br>CLOSED：无连接是活动的或正在进行<br>LISTEN：服务器在等待进入呼叫<br>SYN_RECV：一个连接请求已经到达，等待确认<br>SYN_SENT：应用已经开始，打开一个连接<br>ESTABLISHED：正常数据传输状态<br>FIN_WAIT1：应用说它已经完成<br>FIN_WAIT2：另一边已同意释放<br>ITMED_WAIT：等待所有分组死掉<br>CLOSING：两边同时尝试关闭<br>TIME_WAIT：另一边已初始化一个释放<br>LAST_ACK：等待所有分组死掉</p>]]></content>
    
    
    <categories>
      
      <category>分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速搭建个人博客</title>
    <link href="/2022/05/17/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/05/17/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>完全免费</p><ol><li><p><code>codeup.aliyun.com</code>申请账号，也可以使用淘宝支付宝账号登录</p></li><li><p>登录<code>github.com</code>申请账号</p></li><li><p>安装windows git, <a href="https://gitforwindows.org/">https://gitforwindows.org/</a> 下载之后，直接安装。</p><p>需要先验证git, windows 打开 <code>CMD</code> , 输入 <code>git --version</code> <strong>看到</strong>版本号，说明git安装OK</p></li></ol><p><img src="image-20220517211357219-16527932393901.png" alt="image-20220517211357219"></p><ol start="4"><li><p>安装windows node, <a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> 下载之后，直接安装</p><p>需要先验证node, windows 打开 <code>CMD</code> , 输入 <code>node --version</code> <strong>看到</strong>版本号，说明node安装OK</p><p><img src="image-20220517211458280-16527932999412.png" alt="image-20220517211458280"></p><ol start="5"><li><p>安装vscode, <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a> 下载之后，直接安装</p></li><li><p>安装[^typora], <a href="https://typora.io/releases/all">https://typora.io/releases/all</a> 下载, 直接安装</p><hr><h1 id="准备hexo基础模板"><a href="#准备hexo基础模板" class="headerlink" title="准备hexo基础模板"></a>准备hexo基础模板</h1><p>克隆git, 在CMD执行, 以下目录</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">git clone --recurse-submodules https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/slcnx/</span>hexo-template.git blog<br></code></pre></td></tr></table></figure><blockquote><p>不成功多执行几次，看到100%就表示成功了 </p></blockquote><p>进入克隆目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br></code></pre></td></tr></table></figure><p><img src="image-20220517212501406-16527939027894.png" alt="image-20220517212501406"></p></li></ol></li></ol><p>​            克隆子项目<code>git submodule update --init --recursive</code></p><p>​            安装依赖<code> npm install</code></p><p>​            现在在命令行输入 <code>start .</code></p><p>​            看到如下界面</p><p><img src="image-20220517212644973-16527940068205.png" alt="image-20220517212644973"></p><h1 id="vscode打开目录-运行服务"><a href="#vscode打开目录-运行服务" class="headerlink" title="vscode打开目录, 运行服务"></a>vscode打开目录, 运行服务</h1><p>搜索<code>visual studio code</code>打开<code>blog</code>目录，进入如下界面</p><p><img src="image-20220517213006593-16527942083116.png" alt="image-20220517213006593"></p><p>安装插件, 并退出vscode程序，之后重新 <code>blog</code>目录, 右键 <strong>通过 Code</strong> 打开</p><p><img src="image-20220513094320097.png" alt="image-20220513094320097"></p><p>现在快捷键 <strong>ctrl + shift + `</strong> 运行 <strong>npx hexo s</strong></p><p><img src="image-20220513095212339.png" alt="image-20220513095212339"></p><p>访问本地的4000 <a href="http://localhost:4000/">http://localhost:4000/</a></p><p><img src="image-20220513095237808.png" alt="image-20220513095237808"></p><h1 id="github准备"><a href="#github准备" class="headerlink" title="github准备"></a>github准备</h1><h2 id="准备github仓库"><a href="#准备github仓库" class="headerlink" title="准备github仓库"></a>准备github仓库</h2><p>登录github，新建仓库</p><p><img src="image-20220519192223479-16529593456271.png" alt="image-20220519192223479"></p><p>新建仓库 <code> 格式是</code>用户名.github.io</p><p><img src="image-20220519192515911-16529595176632.png" alt="image-20220519192515911"></p><p>添加一个测试文件</p><p><img src="image-20220519192703441-16529596268043.png" alt="image-20220519192703441"></p><p>一定要添加<code>index.html</code></p><p><img src="image-20220519192839573-16529597218534.png" alt="image-20220519192839573"></p><p>添加之后，刷新网页，过3分钟的样子，右下角出现 active，网页可以正常访问</p><p><img src="image-20220519193346621-16529600281395.png" alt="image-20220519193346621"></p><h2 id="配置github"><a href="#配置github" class="headerlink" title="配置github"></a>配置github</h2><p>在linux主机上执行<code>ssh-keygen -t rsa -b 4096 -f id_rsa_2048 -P &#39;&#39;</code>命令，生成密钥对，使用cat命令查看公钥</p><p><img src="image-20220519195016173-16529610174826.png" alt="image-20220519195016173"></p><p>复制公钥内容，打开新建的内容仓库，选择deploy key，添加公钥</p><p><img src="image-20220519195214067-16529611359537.png" alt="image-20220519195214067"></p><h2 id="获取ssh地址"><a href="#获取ssh地址" class="headerlink" title="获取ssh地址"></a>获取ssh地址</h2><p><img src="image-20220519195326959-16529612089318.png" alt="image-20220519195326959"></p><hr><h1 id="code准备"><a href="#code准备" class="headerlink" title="code准备"></a>code准备</h1><h2 id="准备code仓库"><a href="#准备code仓库" class="headerlink" title="准备code仓库"></a>准备code仓库</h2><p><img src="image-20220513101358650.png" alt="image-20220513101358650"></p><p><img src="image-20220513101431944.png" alt="image-20220513101431944"></p><p>获取https地址</p><p><img src="image-20220519195555039-165296135718411.png" alt="image-20220519195555039"></p><h2 id="本地推送代码"><a href="#本地推送代码" class="headerlink" title="本地推送代码"></a>本地推送代码</h2><p>先在blog目录中， 即进入CMD中，在blog目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote set-url origin https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-14.git<br></code></pre></td></tr></table></figure><p>推送代码, 双击push.sh</p><p><img src="image-20220519195818567-165296149976313.png" alt="image-20220519195818567"></p><p>代码仓库, 已经有数据了</p><p><img src="image-20220519195851328-165296153221314.png" alt="image-20220519195851328"></p><h2 id="添加流水线"><a href="#添加流水线" class="headerlink" title="添加流水线"></a>添加流水线</h2><h3 id="进入流水线页面"><a href="#进入流水线页面" class="headerlink" title="进入流水线页面"></a>进入流水线页面</h3><p><img src="image-20220513101902870.png" alt="image-20220513101902870"></p><p><img src="image-20220513101910710.png" alt="image-20220513101910710"></p><p><img src="image-20220513101941108.png" alt="image-20220513101941108"></p><h3 id="配置流水线"><a href="#配置流水线" class="headerlink" title="配置流水线"></a>配置流水线</h3><p><img src="image-20220513102015626.png" alt="image-20220513102015626"></p><p>定义构建镜像</p><p><img src="image-20220513102242848.png" alt="image-20220513102242848"></p><p><img src="image-20220513102317624.png" alt="image-20220513102317624"></p><p>配置构建参考，<strong>非常关键</strong>, 这里有3个参数</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">EMAIL</span>       你的QQ邮箱 <br><span class="hljs-attribute">GUSER</span>       你的用户名，任意<br><span class="hljs-attribute">GITHUB</span>      这里一定是你上面github创建的仓库的ssh地址，参考<span class="hljs-number">4</span>.<span class="hljs-number">4</span>获取githubssh地址。<br></code></pre></td></tr></table></figure><p><img src="image-20220519200342182-165296182327723.png" alt="image-20220519200342182"></p><p>不需要发布所以删除kubernetes</p><p><img src="image-20220513102349111.png" alt="image-20220513102349111"></p><p>保存并运行</p><h3 id="运行流水线"><a href="#运行流水线" class="headerlink" title="运行流水线"></a>运行流水线</h3><p><img src="image-20220513102417620.png" alt="image-20220513102417620"></p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p><img src="image-20220513102440868.png" alt="image-20220513102440868"></p><p><img src="image-20220513103852668.png" alt="image-20220513103852668"></p><h3 id="查看github-com"><a href="#查看github-com" class="headerlink" title="查看github.com"></a>查看github.com</h3><p>我的已经存在，所以显示已过去三天</p><p><img src="image-20220519200628663-165296199013327.png" alt="image-20220519200628663"></p><h1 id="查看网页"><a href="#查看网页" class="headerlink" title="查看网页"></a>查看网页</h1><p><a href="https://jacksonmj123.github.io/">https://jacksonmj123.github.io/</a></p><p><img src="image-20220519200756238-165296211431129.png" alt="image-20220519200756238"></p><h1 id="写新的文章"><a href="#写新的文章" class="headerlink" title="写新的文章"></a>写新的文章</h1><p>运行<code>addarticle.sh</code>脚本, 输入标题</p><p><img src="image-20220519201003321-165296220428630.png" alt="image-20220519201003321"></p><p>会自动弹出博客编写页面 编写文章<strong>分享4</strong></p><p><img src="image-20220519201118270-165296227926431.png" alt="image-20220519201118270"></p><p><img src="image-20220519201153504-165296231481632.png" alt="image-20220519201153504"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs http">---<br><span class="hljs-attribute">title</span><span class="hljs-punctuation">: </span>分享4<br><span class="hljs-attribute">tags</span>:<br>  - linux<br><span class="hljs-attribute">categories</span>:<br>  - hexo<br><span class="hljs-attribute">date</span><span class="hljs-punctuation">: </span>2022-05-13 10:26:14<br>---<br><br># 背景<br><br>hello<br><br>![image-20220513102937310](第3个文章/image-20220513102937310.png)<br><br>&lt;!--more--&gt;<br></code></pre></td></tr></table></figure><p>使用push.sh发布文章</p><h1 id="自定义网页样式"><a href="#自定义网页样式" class="headerlink" title="自定义网页样式"></a>自定义网页样式</h1><p>config.yml自定义网页样式</p><p><img src="image-20220519201520775-165296252272633.png" alt="image-20220519201520775"></p>]]></content>
    
    
    <categories>
      
      <category>分享</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>（转）markdow常用操作</title>
    <link href="/2022/05/16/markdown%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/05/16/markdown%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<hr><h1 id="日常操作"><a href="#日常操作" class="headerlink" title="日常操作"></a><font size=5>日常操作</font></h1><h2 id="段落和换行符"><a href="#段落和换行符" class="headerlink" title="段落和换行符"></a><font size=3>段落和换行符</font></h2><p>段落只是一行或多行连续的文本。在markdown源代码中，段落由两个或多个空行分隔。在Typora中，您只需要一个空行（按Enter一次）即可创建一个新段落。</p><p>按<code>Shift</code>+ Enter可创建单个换行符。大多数其他降价解析器将忽略单换行符，因此为了使其他降价解析器识别换行符，您可以在行的末尾留下两个空格，或者插入<code>&lt;br/&gt;</code>。</p><h2 id="头-标题"><a href="#头-标题" class="headerlink" title="头|标题"></a><font size=3>头|标题</font></h2><p>标题<code>#</code>在行的开头使用1-6个hash（）字符，对应于标题级别1-6。例如</p><figure class="highlight clean"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs clean"># 这是一级标题 h1<br>## 这是二级标题 h2<br>### 这是三级标题 h3<br>#### 这是四级标题 h4<br>##### 这是五级标题 h5<br>###### 这是六级标题 h6<br></code></pre></td></tr></table></figure><p><strong>在Typora中，输入’＃’后跟标题内容，Enter按键将创建标题。</strong></p><p><strong>操作实现效果如下GIF：</strong></p><p><img src="m164jw8vb1-16541671067841.gif" alt="img"></p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a><font size=3>段落</font></h2><p>Markdown 段落没有特殊的格式，直接编写文字就好，<strong>段落的换行是使用两个以上空格加上回车。</strong></p><p><img src="1620-16541671216902" alt="img"></p><p>当然也可以在段落后面使用一个空行来表示重新开始一个段落。</p><p><img src="1621-16541671289993" alt="img"></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a><font size=3>字体</font></h2><p>Markdown 可以使用以下几种字体：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">*斜体文本*<br>_斜体文本_<br>**粗体文本**<br>__粗体文本__<br>***粗斜体文本***<br>___粗斜体文本___<br></code></pre></td></tr></table></figure><p><strong>操作实现效果如下GIF：</strong></p><p><img src="fnpfndqvob-16541671355794.gif" alt="img"></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a><font size=3>分割线</font></h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">***<br>* * *<br><br>*****<br><br>- - -<br><br>----------<br></code></pre></td></tr></table></figure><p><strong>操作实现效果如下：</strong></p><p><img src="1622-16541671466705" alt="img"></p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a><font size=4>删除线</font></h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">baidu.<span class="hljs-property">com</span><br>google.<span class="hljs-property">com</span><br>~~taobao.<span class="hljs-property">com</span>~~<br></code></pre></td></tr></table></figure><p><strong>操作实现效果如下：</strong></p><p><img src="1623-16541671529346" alt="img"></p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a><font size=3>下划线</font></h2><p>下划线可以通过 HTML 的 <u> 标签来实现：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;u&gt;带下划线文本&lt;/u&gt;<br></code></pre></td></tr></table></figure><p><strong>显示效果如下所示：</strong></p><p><img src="1624-16541671601787" alt="img"></p><p><img src="1620-16541685416171.png" alt="img"></p><h2 id="脚注"><a href="#脚注" class="headerlink" title=" 脚注"></a><font size=3> 脚注</font></h2><p>脚注是对文本的补充说明。</p><p>Markdown 脚注的格式如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[^要注明的文本]<br></code></pre></td></tr></table></figure><p>以下实例演示了脚注的用法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">创建脚注格式类似这样 [^<span class="hljs-variable constant_">RUNOOB</span>]。<br><br>[^<span class="hljs-variable constant_">RUNOOB</span>]: 【离不开的网】 -- 输出更多好文章！！！<br></code></pre></td></tr></table></figure><p><strong>操作实现效果如下GIF：</strong></p><p><img src="oq0jyvu3j3-16541671673698.gif" alt="img"></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a><font size=3>列表</font></h2><p>Markdown 支持<strong>有序列表</strong>和<strong>无序列表</strong>。</p><p>无序列表使用星号(<em>****)、加号(<strong>+</strong>)或是减号(</em>*-**)作为列表标记：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">* 第一项<br>* 第二项<br>* 第三项<br><br>+ 第一项<br>+ 第二项<br>+ 第三项<br><br><br>- 第一项<br>- 第二项<br>- 第三项<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1625-16541671762219" alt="img"></p><p>有序列表使用数字并加上 <strong>.</strong> 号来表示，如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 第一项<br><span class="hljs-number">2.</span> 第二项<br><span class="hljs-number">3.</span> 第三项<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1626-165416718551210" alt="img"></p><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a><font size=2>列表嵌套</font></h3><p>列表嵌套只需在子列表中的选项添加四个空格或Tab即可：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 第一项：<br>   - 第一项嵌套的第一个元素<br>   - 第一项嵌套的第二个元素<br><br><span class="hljs-number">2.</span> 第二项：<br>   - 第二项嵌套的第一个元素<br>   - 第二项嵌套的第一个元素<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1627-165416719237111" alt="img"></p><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a><font size=3>区块</font></h2><p>Markdown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟一个<strong>空格</strong>符号：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; <span class="hljs-title class_">Markdown</span> 区块教程<br>&gt; 微信公众号【离不开的网】<br>&gt; 关注得更多精彩内容<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1628-165416719956812" alt="img"></p><p>另外区块是可以嵌套的，一个 <strong>&gt;</strong> 符号是最外层，两个 <strong>&gt;</strong> 符号是第一层嵌套，以此类推：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; 最外层<br>&gt; &gt; 第一层嵌套<br>&gt; &gt; &gt; 第二层嵌套<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1629-165416720576513" alt="img"></p><p>1.11.1 区块中使用列表</p><p>区块中使用列表实例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; 区块中使用列表<br>&gt;&gt; <span class="hljs-number">1.</span> 第一项&gt; <span class="hljs-number">2.</span> 第二项&gt;&gt; - 第一项&gt; - 第二项&gt; - 第三项<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1630-165416721232014" alt="img"></p><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a><font size=3>列表中使用区块</font></h3><p>如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">- 第一项<br>  &gt; 【离不开的网】  &gt; 关注得更多精彩内容<br>- 第二项<br></code></pre></td></tr></table></figure><p><strong>显示效果如下：</strong></p><p><img src="1631-165416722061515" alt="img"></p><h2 id="代码"><a href="#代码" class="headerlink" title=" 代码"></a><font size=3> 代码</font></h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**`**），例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">`abs()`</span>绝对值函数<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1632-165416722651516" alt="img"></p><p><strong>注：可能很多人打错这个符号 `</strong> <strong>，这个符号是在tab的上面，切换成英文输入点击（tab上方、数字1左边）的键即可。</strong></p><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a><font size=2>代码区块</font></h3><p>代码区块使用 <strong>4 个空格</strong>或者一个<strong>制表符（Tab 键）</strong>。</p><p>实例如下：</p><p><img src="1633-165416723760617" alt="img"></p><p><strong>显示结果如下：</strong></p><p><img src="1634-165416724411418" alt="img"></p><p>你也可以用 <strong>```</strong> 包裹一段代码，并指定一种语言（也可以不指定）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">``</span><span class="hljs-string">`javascript</span><br><span class="hljs-string">$(document).ready(function () &#123;</span><br><span class="hljs-string">   alert(&#x27;离不开的网&#x27;);</span><br><span class="hljs-string">&#125;);</span><br><span class="hljs-string">`</span><span class="hljs-string">``</span><br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1635-165416725022619" alt="img"></p><h2 id="链接"><a href="#链接" class="headerlink" title=" 链接"></a><font size=3> 链接</font></h2><p>链接使用方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[链接名称](链接地址)<br>或者<br>&lt;链接地址&gt;<br></code></pre></td></tr></table></figure><p><strong>如下面这个例子：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">这是一个链接 [百度链接](<span class="hljs-attr">https</span>:<span class="hljs-comment">//www.baidu.com)</span><br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1636-165416725682020" alt="img"></p><p><strong>直接使用链接地址：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;www.<span class="hljs-property">baidu</span>.<span class="hljs-property">com</span>&gt;<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1637-165416726217221" alt="img"></p><h3 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a><font size=2>高级链接</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">链接也可以用变量来代替，文档末尾附带变量地址：<br>这个链接用 <span class="hljs-number">1</span> 作为网址变量 [<span class="hljs-title class_">Google</span>][<span class="hljs-number">1</span>]<br>这个链接用 baidu 作为网址变量 [<span class="hljs-title class_">Baidu</span>][baidu]<br>然后在文档的结尾为变量赋值（网址）<br><br><br><span class="hljs-string">``</span><span class="hljs-string">`[1]: http://www.google.com/</span><br><span class="hljs-string">[baidu]: http://www.baidu.com/`</span><span class="hljs-string">``</span><br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1638-165416726709122" alt="img"></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a><font size=3>图片</font></h2><p>Markdown 图片语法格式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">![alt 属性文本](图片地址)<br><br>![alt 属性文本](图片地址 <span class="hljs-string">&quot;可选标题&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p><strong>使用实例：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">![baidu 图标](<span class="hljs-attr">https</span>:<span class="hljs-comment">//www.baidu.com/img/bd_logo1.png )</span><br>![baidu 图标](<span class="hljs-attr">https</span>:<span class="hljs-comment">//www.baidu.com/img/bd_logo1.png  &quot;baidu&quot;)</span><br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1639-165416728159723" alt="img"></p><p>当然，你也可以像网址那样对图片网址使用变量:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">这个链接用 <span class="hljs-number">1</span> 作为网址变量 [baidu][<span class="hljs-number">1</span>].<br>然后在文档的结尾位变量赋值（网址）<br><br>[<span class="hljs-number">1</span>]: <span class="hljs-attr">https</span>:<span class="hljs-comment">//www.baidu.com/img/bd_logo1.png</span><br></code></pre></td></tr></table></figure><p><strong>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;img src=<span class="hljs-string">&quot;https://www.baidu.com/img/bd_logo1.png&quot;</span> width=<span class="hljs-string">&quot;50%&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p><strong>显示结果如下：</strong></p><p><img src="1640-165416728930724" alt="img"></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a><font size=3>表格</font></h2><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">| 表头   | 表头   || ------ | ------ || 单元格 | 单元格 || 单元格 | 单元格 |<br></code></pre></td></tr></table></figure><p><strong>显示效果如下：</strong></p><p><img src="1641-165416729482325" alt="img"></p><h3 id="对齐方式"><a href="#对齐方式" class="headerlink" title=" 对齐方式"></a><font size=2> 对齐方式</font></h3><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><strong>-: 设置内容和标题栏居右对齐。</strong></li><li><strong>:- 设置内容和标题栏居左对齐。</strong></li><li><strong>:-: 设置内容和标题栏居中对齐。</strong></li></ul><p>实例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">| 左对齐 | 右对齐 | 居中对齐 || :----- | -----: | :------: || 单元格 | 单元格 |  单元格  || 单元格 | 单元格 |  单元格  |<br></code></pre></td></tr></table></figure><p><strong>显示效果如下：</strong></p><p><img src="1642-165416729994926" alt="img"></p><h1 id="Markdown高级操作技巧"><a href="#Markdown高级操作技巧" class="headerlink" title="Markdown高级操作技巧"></a><font size=5>Markdown高级操作技巧</font></h1><h2 id="转义"><a href="#转义" class="headerlink" title=" 转义"></a><font size=3> 转义</font></h2><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">**文本加粗** \*\* 正常显示星号 \*\*<br></code></pre></td></tr></table></figure><p><strong>显示效果如下：</strong></p><p><img src="1643-165416730541827" alt="img"></p><p><strong>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript">\   反斜线<span class="hljs-string">`   反引号</span><br><span class="hljs-string">*   星号</span><br><span class="hljs-string">_   下划线</span><br><span class="hljs-string">&#123;&#125;  花括号</span><br><span class="hljs-string">[]  方括号</span><br><span class="hljs-string">()  小括号</span><br><span class="hljs-string">#   井字号</span><br><span class="hljs-string">+   加号</span><br><span class="hljs-string">-   减号</span><br><span class="hljs-string">.   英文句点</span><br><span class="hljs-string">!   感叹号*   星号</span><br><span class="hljs-string">_   下划线</span><br><span class="hljs-string">&#123;&#125;  花括号</span><br><span class="hljs-string">[]  方括号</span><br><span class="hljs-string">()  小括号</span><br><span class="hljs-string">#   井字号</span><br><span class="hljs-string">+   加号</span><br><span class="hljs-string">-   减号</span><br><span class="hljs-string">.   英文句点</span><br><span class="hljs-string">!   感叹号</span><br></code></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a><font size=3>公式</font></h2><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$$<br>\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 =  \begin&#123;vmatrix&#125;<br>\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\<br>\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; <span class="hljs-number">0</span> \\<br>\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; <span class="hljs-number">0</span> \\<br>\end&#123;vmatrix&#125;<br>$$tep1&#125;&#123;\style&#123;<span class="hljs-attr">visibility</span>:hidden&#125;&#123;(x+<span class="hljs-number">1</span>)(x+<span class="hljs-number">1</span>)&#125;&#125;<br>$$<br></code></pre></td></tr></table></figure><p><strong>结果如下图所示：</strong></p><p><img src="1644-165416731398228" alt="img"></p><p><img src="1645-165416732211929" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>MARKDOWN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdow使用</title>
    <link href="/2022/05/16/markdow%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/05/16/markdow%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h1><ol><li><p>编写软件：<code>typora</code></p></li><li><p><a href="https://www.runoob.com/markdown/md-tutorial.html">markdown教程</a></p></li><li><p><a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html#picgoplugins">picgo插件</a></p><blockquote><p><a href="https://github.com/gclove/picgo-plugin-super-prefix#readme">自动修改图片后缀</a></p></blockquote></li><li><p>typora标题自动编号</p></li></ol><h1 id="typora"><a href="#typora" class="headerlink" title="typora"></a>typora</h1><p><a href="https://typoraio.cn/windows/dev_release.html">Typora for windows — beta version release (typoraio.cn)</a></p><p><a href="https://zhuanlan.zhihu.com/p/340105623">图片上传到七牛云存储</a></p><blockquote><p><img src="image-20220314201101010.png" alt="image-20220314201101010"></p></blockquote><p><a href="https://connor-sun.github.io/posts/38835.html">自动修改图片文件名</a></p><blockquote><p><img src="20220314-201332.png" alt="image-20220314201330552"></p></blockquote><h2 id="markdown-1"><a href="#markdown-1" class="headerlink" title="markdown"></a>markdown</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight clean"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs clean"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><p><code>ctrl + 1-6</code></p><p><code>ctrl +-</code></p><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p><code>### 2.1.2</code></p><p><code>&lt;p style=&quot;color: red;&quot;&gt;颜色&lt;/p&gt;</code></p><ol><li>p 标签</li><li>style 是p标签的属性，行内样式<ul><li>color: 颜色，red, green, blue, black</li></ul></li><li><code>颜色</code> 标签内的内容</li><li><code>&lt;/p&gt;</code> 标签的结尾，双标签必须成对出现</li></ol><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"># ls -lh<br><span class="hljs-function"><span class="hljs-title">drwxr</span></span>-xr-x root root ...<br></code></pre></td></tr></table></figure><ol><li>ls shell解释的命令</li><li><code>-lh</code>是命令的选项，短选项<ul><li>-l 是列表</li><li>-h human-readable</li></ul></li><li><code>d</code> 目录</li><li><code>rwxr-xr-x </code> 权限，755，目录的。</li><li>属主: </li><li>group</li><li>..</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">```<span class="language-javascript">javascript</span><br><span class="language-javascript">$(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;RUNOOB&#x27;</span>);</span><br><span class="language-javascript">&#125;);</span><br><span class="language-javascript"></span>```<br></code></pre></td></tr></table></figure><p>ctrl + shift + k 插入代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ls -lh</span><br>123<br><br>[ $? -eq 0 ] <br></code></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><ul><li>1</li><li>2</li><li>3</li></ul><h4 id="有列列表"><a href="#有列列表" class="headerlink" title="有列列表"></a>有列列表</h4><ol><li>1</li><li>2</li></ol><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less">这是一个链接 <span class="hljs-selector-attr">[菜鸟教程]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//www.runoob.com)</span><br></code></pre></td></tr></table></figure><p>这是一个链接 <a href="https://www.runoob.com/">菜鸟教程</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">快捷键 ctrl +k<br></code></pre></td></tr></table></figure><p><a href="https://www.runoob.com/">非常nice的教程</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">![RUNOOB 图标](http:<span class="hljs-regexp">//</span>static.runoob.com<span class="hljs-regexp">/images/</span>runoob-logo.png)<br></code></pre></td></tr></table></figure><p><img src="runoob-logo.png" alt="RUNOOB 图标"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">快捷键 ctrl + <span class="hljs-built_in">shift</span> + i<br></code></pre></td></tr></table></figure><p><img src="https://xiazai-fd.zol-img.com.cn/t_s64x64/g6/M00/07/06/ChMkKmELgHKILPFHAAAWYn03MN4AASeXQB6-7wAABZ6075.jpg"></p><p>截图ctrl +v , 上传图片到云存储或者保存于本地</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> 左对齐 </span>|<span class="hljs-string"> 右对齐 </span>|<span class="hljs-string"> 居中对齐 </span>|<br>|<span class="hljs-string"> :-----</span>|<span class="hljs-string"> ----: </span>|<span class="hljs-string"> :----: </span>|<br>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<br>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<span class="hljs-string"> 单元格 </span>|<br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">快捷键 ctrl + <span class="hljs-built_in">t</span> <br>ctrl + enter, 加一行<br></code></pre></td></tr></table></figure><table><thead><tr><th>序号</th><th>姓名</th><th>年龄</th></tr></thead><tbody><tr><td>1</td><td>zs</td><td>11</td></tr><tr><td>xx</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>ctrl + enter</td><td></td><td></td></tr></tbody></table><h3 id="直接写html"><a href="#直接写html" class="headerlink" title="直接写html"></a>直接写html</h3><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">**文本加粗**</span> <br>\*\* 正常显示星号 \*\* 反斜线<br></code></pre></td></tr></table></figure><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><h3 id="画流程图、时序图-顺序图-、甘特图"><a href="#画流程图、时序图-顺序图-、甘特图" class="headerlink" title="画流程图、时序图(顺序图)、甘特图"></a>画流程图、时序图(顺序图)、甘特图</h3><h1 id="标题自动编号"><a href="#标题自动编号" class="headerlink" title="标题自动编号"></a>标题自动编号</h1><p>复制代码, 编辑文件为<code>base.user.css</code>,里面粘贴如下内容保存后重启Typora，输入标</p><p>题时会自动出现序号</p><p><img src="image-20210114181536996.png" alt="image-20210114181536996"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/** initialize css counter */</span><br><span class="hljs-selector-id">#write</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h1<br>&#125;<br><br><span class="hljs-selector-tag">h1</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h2<br>&#125;<br><br><span class="hljs-selector-tag">h2</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h3<br>&#125;<br><br><span class="hljs-selector-tag">h3</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h4<br>&#125;<br><br><span class="hljs-selector-tag">h4</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h5<br>&#125;<br><br><span class="hljs-selector-tag">h5</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h6<br>&#125;<br><br><span class="hljs-comment">/** put counter result into headings */</span><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h1;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h2;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> <span class="hljs-comment">/** override the default style for focused headings */</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h3;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h4;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h5;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-id">#write</span> <span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-class">.md-heading</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h6;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h6) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-comment">/** override the default style for focused headings */</span><br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-id">#write</span>&gt;<span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-class">.md-focus</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">color</span>: inherit;<br>    <span class="hljs-attribute">border</span>: inherit;<br>    <span class="hljs-attribute">border-radius</span>: inherit;<br>    <span class="hljs-attribute">position</span>: inherit;<br>    <span class="hljs-attribute">left</span>:initial;<br>    <span class="hljs-attribute">float</span>: none;<br>    <span class="hljs-attribute">top</span>:initial;<br>    <span class="hljs-attribute">font-size</span>: inherit;<br>    <span class="hljs-attribute">padding-left</span>: inherit;<br>    <span class="hljs-attribute">padding-right</span>: inherit;<br>    <span class="hljs-attribute">vertical-align</span>: inherit;<br>    <span class="hljs-attribute">font-weight</span>: inherit;<br>    <span class="hljs-attribute">line-height</span>: inherit;<br>&#125;<br><br><br><span class="hljs-selector-class">.sidebar-content</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h1<br>&#125;<br><br><span class="hljs-selector-class">.outline-h1</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h2<br>&#125;<br><br><span class="hljs-selector-class">.outline-h2</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h3<br>&#125;<br><br><span class="hljs-selector-class">.outline-h3</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h4<br>&#125;<br><br><span class="hljs-selector-class">.outline-h4</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h5<br>&#125;<br><br><span class="hljs-selector-class">.outline-h5</span> &#123;<br>    <span class="hljs-attribute">counter-reset</span>: h6<br>&#125;<br><br><span class="hljs-selector-class">.outline-h1</span>&gt;<span class="hljs-selector-class">.outline-item</span>&gt;<span class="hljs-selector-class">.outline-label</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h1;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-class">.outline-h2</span>&gt;<span class="hljs-selector-class">.outline-item</span>&gt;<span class="hljs-selector-class">.outline-label</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h2;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-class">.outline-h3</span>&gt;<span class="hljs-selector-class">.outline-item</span>&gt;<span class="hljs-selector-class">.outline-label</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h3;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-class">.outline-h4</span>&gt;<span class="hljs-selector-class">.outline-item</span>&gt;<span class="hljs-selector-class">.outline-label</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h4;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-class">.outline-h5</span>&gt;<span class="hljs-selector-class">.outline-item</span>&gt;<span class="hljs-selector-class">.outline-label</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h5;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-class">.outline-h6</span>&gt;<span class="hljs-selector-class">.outline-item</span>&gt;<span class="hljs-selector-class">.outline-label</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>    <span class="hljs-attribute">counter-increment</span>: h6;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-built_in">counter</span>(h1) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h2) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h3) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h4) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h5) <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-built_in">counter</span>(h6) <span class="hljs-string">&quot;. &quot;</span><br>&#125;<br><br><span class="hljs-selector-tag">blockquote</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1.5625em</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.6rem</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1rem</span>;<br>  <span class="hljs-attribute">page-break-inside</span>: avoid;<br>  <span class="hljs-attribute">border-left</span>: <span class="hljs-number">0.3rem</span> solid <span class="hljs-number">#42b983</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0.3rem</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0.1rem</span> <span class="hljs-number">0.4rem</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.05</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0.05rem</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fafafa</span>;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ff9100</span>;  <br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>MARKDOWN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>typora字体颜色大小</title>
    <link href="/2022/05/16/typora%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E5%A4%A7%E5%B0%8F/"/>
    <url>/2022/05/16/typora%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E5%A4%A7%E5%B0%8F/</url>
    
    <content type="html"><![CDATA[<p>&lt;font face=”微软雅黑” size=4 color=#FF0000 &gt;字母</font></p><p>&lt;font face=”黑体” &gt;字母</font><br>&lt;font size=4 &gt;字母</font><br>&lt;font color=#FF0000 &gt;红色</font><br>&lt;font color=#008000 &gt;绿色</font><br>&lt;font color=#0000FF &gt;蓝色</font></p>]]></content>
    
    
    <categories>
      
      <category>typora</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MARKDOWN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享3</title>
    <link href="/2022/05/16/%E5%88%86%E4%BA%AB3/"/>
    <url>/2022/05/16/%E5%88%86%E4%BA%AB3/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">\1. 你登陆后终端后，需要配置的环境变量和执行的命令，可以放在~/.bash_profile中<br><br>\2. 快速获取当前目录下所有文件内容， <span class="hljs-built_in">head</span> -n 10 * , 通常在配置文件目录下使用。<br><br>\3. <span class="hljs-built_in">tr</span> 命令大小写转换 <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;HELLO WORLD&quot;</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&#x27;A-Z&#x27;</span> <span class="hljs-string">&#x27;a-z&#x27;</span><br><br>\4. ssh不能登陆<br><br>启动sshd服务后，是正常的，但是客户端并不能连接上sshd服务器端。通过查看日志，显示如下：<br><br>Could not load host key: /etc/ssh/ssh_host_rsa_key<br><br>从提示信息看是sshd守护进程不能加载主机密钥文件，因为找不到这些密钥文件(配置文件/etc/ssh/sshd_config中已定义密钥文件名与路径)。 一般openssh服务正常安装后，主机会自动生成相应的主机密钥文件，但这里因未知原因并没有完成这一步动作，导致无法远程ssh连接。<br><br>所以解决方法就是重新生成主机密钥文件<br><br>[root@aefe8007a17d ~]<span class="hljs-comment"># ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br><br>[root@aefe8007a17d ~]<span class="hljs-comment"># ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key</span><br><br>[root@aefe8007a17d ~]<span class="hljs-comment"># ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key</span><br><br>再次登录发现正常了，远程主机也可以连接。<br><br>\5. 进程启动时间及进程内存使用量<br><br>ps aux |grep -v USER | <span class="hljs-built_in">sort</span> -nk +4 | <span class="hljs-built_in">tail</span> <span class="hljs-comment"># 显示消耗内存最多的10个运行中的进程，以内存使用量排序.cpu +3</span><br><br>\<span class="hljs-comment"># USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND</span><br><br>%CPU <span class="hljs-comment"># 进程的cpu占用率</span><br><br>%MEM <span class="hljs-comment"># 进程的内存占用率</span><br><br>VSZ <span class="hljs-comment"># 进程虚拟大小,单位K(即总占用内存大小,包括真实内存和虚拟内存)</span><br><br>RSS <span class="hljs-comment"># 进程使用的驻留集大小即实际物理内存大小</span><br><br>START <span class="hljs-comment"># 进程启动时间和日期</span><br><br>占用的虚拟内存大小 = VSZ - RSS<br><br>ps -eo pid,lstart,etime,args <span class="hljs-comment"># 查看进程启动时</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享2</title>
    <link href="/2022/05/16/%E5%88%86%E4%BA%AB2/"/>
    <url>/2022/05/16/%E5%88%86%E4%BA%AB2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-number">1</span>. 因式分解, factor<br><span class="hljs-number">2</span>. 读写相同文件，grep <span class="hljs-literal">-v</span> something some<span class="hljs-operator">-file</span> | sponge some<span class="hljs-operator">-file</span><br><span class="hljs-number">3</span>. Linux上不同发行版本通过apt, yun, dnf, pacman, 可以通过<span class="hljs-built_in">man</span>获取查找和安装程序包。mac上通过brew(Homebrew), port(MacPorts), 安装命令。pip可以安装基于python命令行的工具。<br><span class="hljs-number">4</span>. wc命令<span class="hljs-literal">-l</span> 统计行，<span class="hljs-literal">-m</span>字符，<span class="hljs-literal">-w</span>单词，<span class="hljs-literal">-c</span>字节<br><span class="hljs-number">5</span>. WEB debug, <span class="hljs-built_in">curl</span>和<span class="hljs-built_in">curl</span> <span class="hljs-literal">-I</span> 或<span class="hljs-built_in">wget</span>或更好用的httpie<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享1</title>
    <link href="/2022/05/16/%E5%88%86%E4%BA%AB1/"/>
    <url>/2022/05/16/%E5%88%86%E4%BA%AB1/</url>
    
    <content type="html"><![CDATA[<figure class="highlight vim"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs vim">\<span class="hljs-number">1</span>. lsmod, modinfo 列出或显示内核模块的详情<br>\<span class="hljs-number">2</span>. glances, dstat 全局多子系统监控工具<br>\<span class="hljs-number">3</span>. 查看当前cpu/disk状态的经典工具是top(甚至更好的htop), iostat, iotop. 使用iostat -mxz <span class="hljs-number">15</span> 可以查看基本CPU状态和每磁盘状态及性能的细节。<br>\<span class="hljs-number">4</span>. 在桌面打开一个文件，使用<span class="hljs-keyword">open</span>或<span class="hljs-keyword">open</span> -<span class="hljs-keyword">a</span> /path/<span class="hljs-keyword">to</span>/somefile<br>\<span class="hljs-number">5</span>. 比<span class="hljs-keyword">grep</span> -r搜索源码目录或文件中的内容更优秀的工具: ack(内容自上而下的显示）, ag(比ack快几十倍), rg(rust写的，比ag更快） 来源: https://zhuanlan.zhihu.<span class="hljs-keyword">com</span>/<span class="hljs-keyword">p</span>/<span class="hljs-number">129262877</span><br>sudo apt-<span class="hljs-built_in">get</span> install silversearcher-ag<br>\# rg 安装 https://gist.github.<span class="hljs-keyword">com</span>/kostaz/<span class="hljs-number">6</span>e0cf1eee35a34cd6589ec15b58e682c<br>sudo apt-<span class="hljs-built_in">get</span> install ack<br>\<span class="hljs-number">6</span>. 查看目录树的大小和时间，<span class="hljs-keyword">find</span> . -<span class="hljs-built_in">type</span> <span class="hljs-keyword">f</span> -<span class="hljs-keyword">ls</span>。比<span class="hljs-keyword">ls</span> -lR更容易读。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos7最小化安装建议安装包</title>
    <link href="/2022/05/16/centos7%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85%E5%BB%BA%E8%AE%AE%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <url>/2022/05/16/centos7%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85%E5%BB%BA%E8%AE%AE%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<figure class="highlight mipsasm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs mipsasm">yum -y <span class="hljs-keyword">install </span>vim-enhanced tcpdump lrzsz tree telnet <span class="hljs-keyword">bash-completion </span>net-tools wget <span class="hljs-keyword">bzip2 </span>lsof tmux man-pages zip unzip nfs-utils gcc make gcc-c++ glibc glibc-devel pcre pcre-devel openssl  openssl-devel systemd-devel zlib-devel<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos8最小化安装建议安装包</title>
    <link href="/2022/05/16/centos8%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85%E5%BB%BA%E8%AE%AE%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <url>/2022/05/16/centos8%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85%E5%BB%BA%E8%AE%AE%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">PACK=<span class="hljs-string">&quot;</span><br><span class="hljs-string">vim-enhanced</span><br><span class="hljs-string">tcpdump</span><br><span class="hljs-string">autofs</span><br><span class="hljs-string">lrzsz</span><br><span class="hljs-string">tree</span><br><span class="hljs-string">telnet</span><br><span class="hljs-string">ftp</span><br><span class="hljs-string">lftp</span><br><span class="hljs-string">redhat-lsb-core</span><br><span class="hljs-string">bash-completion</span><br><span class="hljs-string">net-tools</span><br><span class="hljs-string">postfix</span><br><span class="hljs-string">wget</span><br><span class="hljs-string">bzip2</span><br><span class="hljs-string">lsof</span><br><span class="hljs-string">screen</span><br><span class="hljs-string">mlocate</span><br><span class="hljs-string">tmux</span><br><span class="hljs-string">man-pages</span><br><span class="hljs-string">&quot;</span><br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-variable">$PACK</span>;<span class="hljs-keyword">do</span><br>    rpm -q <span class="hljs-variable">$p</span>  &amp;&gt; /dev/null || yum -q -y install <span class="hljs-variable">$p</span> <br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu1804 最小化安装建议安装包</title>
    <link href="/2022/05/16/u0016Ubuntu1804-%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85%E5%BB%BA%E8%AE%AE%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <url>/2022/05/16/u0016Ubuntu1804-%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85%E5%BB%BA%E8%AE%AE%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<figure class="highlight axapta"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs axapta">apt -y purge ufw lxd lxd-<span class="hljs-keyword">client</span> lxcfs liblxc-<span class="hljs-keyword">common</span> apt -y install iproute2 ntpdate tcpdump telnet traceroute nfs-kernel-<span class="hljs-keyword">server</span> nfs-<span class="hljs-keyword">common</span> lrzsz tree openssl libssl-dev libpcre3 libpcre3-dev zlib1g-dev  gcc openssh-<span class="hljs-keyword">server</span>  iotop unzip zip<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>yum reposync 无法下载存储库中已存在的 rpm（reposync下载epel包失败BUG解决方案）</title>
    <link href="/2022/05/16/yum-reposync-%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E5%AD%98%E5%82%A8%E5%BA%93%E4%B8%AD%E5%B7%B2%E5%AD%98%E5%9C%A8%E7%9A%84-rpm%EF%BC%88reposync%E4%B8%8B%E8%BD%BDepel%E5%8C%85%E5%A4%B1%E8%B4%A5BUG%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%89/"/>
    <url>/2022/05/16/yum-reposync-%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E5%AD%98%E5%82%A8%E5%BA%93%E4%B8%AD%E5%B7%B2%E5%AD%98%E5%9C%A8%E7%9A%84-rpm%EF%BC%88reposync%E4%B8%8B%E8%BD%BDepel%E5%8C%85%E5%A4%B1%E8%B4%A5BUG%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<figure class="highlight ini"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[main]</span><br><span class="hljs-attr">reposdir</span>=/etc/reposync.repos.d<br><span class="hljs-attr">retries</span>=<span class="hljs-number">3</span><br><span class="hljs-attr">debuglevel</span>=<span class="hljs-number">10</span><br><span class="hljs-attr">rpmverbosity</span>=debug<br><span class="hljs-section">[epel-el7]</span><br><span class="hljs-attr">name</span>=EPEL repo<br><span class="hljs-attr">baseurl</span>=XXX<br><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span>原文链接 https://bugzilla.redhat.com/show_bug.cgi?id=<span class="hljs-number">1399235</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更改IP脚本</title>
    <link href="/2022/05/16/%E6%9B%B4%E6%94%B9IP%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/05/16/%E6%9B%B4%E6%94%B9IP%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[root@ansible srete]<span class="hljs-comment"># cat chgip.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author:                陈濛</span><br><span class="hljs-comment">#Date:                  2022-03-28</span><br><span class="hljs-comment">#FileName：             chgip.sh</span><br><span class="hljs-comment">#Description：          Create from cm</span><br><span class="hljs-comment">#Copyright (C):        2022 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br>cfg=/etc/sysconfig/network-scripts/ifcfg-<br>ip=IPADDR<br>mask=NETMASK<br>prefix=PREFIX<br>gw=GATEWAY<br>dns=DNS1<br>format=<span class="hljs-string">&quot;^((1[0-9][0-9]\.)|(2[0-4][0-9]\.)|(25[0-5]\.)|([0-9][0-9]\.)|([0-9]\.))&#123;3&#125;((1[0-9][0-9])|(2[0-4][0-9])|(25[0-4])|([0-9][0-9])|([0-9]))$&quot;</span><br>red=<span class="hljs-string">&quot;\e[1;31m&quot;</span><br>end=<span class="hljs-string">&quot;\e[0m&quot;</span><br>    <span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入网卡名称(ip a显示出来的网卡名): &quot;</span> eth<br>        file=/etc/sysconfig/network-scripts/ifcfg-<span class="hljs-variable">$eth</span><br><span class="hljs-keyword">if</span> [ -e <span class="hljs-variable">$file</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入IP: &quot;</span> ip1<br>         <span class="hljs-keyword">while</span> [[ ! <span class="hljs-variable">$ip1</span> =~ <span class="hljs-variable">$format</span> ]]; <span class="hljs-keyword">do</span><br>          <span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;IP格式不正确，重新输入: &quot;</span> ip1<br>         <span class="hljs-keyword">done</span><br>        <span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入子网掩码(非CIDR表示法): &quot;</span> mask1<br>        <span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入网关: &quot;</span> gw1<br>        <span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入DNS &quot;</span> ds1<br>         <span class="hljs-keyword">if</span> [ ! -z <span class="hljs-variable">$ip1</span> -a ! -z <span class="hljs-variable">$mask1</span> -a ! -z <span class="hljs-variable">$gw1</span> -a ! -z <span class="hljs-variable">$ds1</span> ] ;<span class="hljs-keyword">then</span><br>         sed -ri -e <span class="hljs-string">&quot;/<span class="hljs-variable">$ip</span>/d&quot;</span> -e <span class="hljs-string">&quot;/<span class="hljs-variable">$mask</span>/d&quot;</span> -e <span class="hljs-string">&quot;/<span class="hljs-variable">$prefix</span>/d&quot;</span> -e <span class="hljs-string">&quot;/<span class="hljs-variable">$gw</span>/d&quot;</span> -e <span class="hljs-string">&quot;/<span class="hljs-variable">$dns</span>/d&quot;</span> -e <span class="hljs-string">&quot;/ONBOOT=.*/a<span class="hljs-variable">$ip</span>=<span class="hljs-variable">$ip1</span>&quot;</span> -e <span class="hljs-string">&quot;/ONBOOT=.*/a<span class="hljs-variable">$mask</span>=<span class="hljs-variable">$mask1</span>&quot;</span> -e <span class="hljs-string">&quot;/ONBOOT=.*/a<span class="hljs-variable">$gw</span>=<span class="hljs-variable">$gw1</span>&quot;</span> -e <span class="hljs-string">&quot;/ONBOOT=.*/a<span class="hljs-variable">$dns</span>=<span class="hljs-variable">$ds1</span>&quot;</span> -e <span class="hljs-string">&quot;/BOOTPROTO/cBOOTPROTO=static&quot;</span> -e <span class="hljs-string">&quot;/ONBOOT=.*/cONBOOT=YES&quot;</span> $cfg<span class="hljs-variable">$eth</span><br>          <span class="hljs-keyword">fi</span><br>          <span class="hljs-built_in">echo</span> -e  <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> ----------准备重启网络，请等待-----------<span class="hljs-variable">$end</span>&quot;</span><br>          systemctl restart network<br>          <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> -----------网络重启完成----------<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-keyword">else</span><br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 网卡文件不存在，已创建<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-built_in">touch</span> $cfg<span class="hljs-variable">$eth</span><br><span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入IP: &quot;</span> ip1<br><span class="hljs-keyword">while</span> [[ ! <span class="hljs-variable">$ip1</span> =~ <span class="hljs-variable">$format</span> ]] ;<span class="hljs-keyword">do</span><br> <span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;IP格式错误，重新输入: &quot;</span> ip1<br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入子网掩码(如255.255.255.0): &quot;</span> mask1<br><span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入网关: &quot;</span> gw1<br><span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入DNS: &quot;</span> ds1<br>  <span class="hljs-keyword">if</span> [ ! -z <span class="hljs-variable">$ip1</span> -a ! -z <span class="hljs-variable">$mask1</span> -a ! -z <span class="hljs-variable">$gw1</span> -a ! -z <span class="hljs-variable">$ds1</span> ] ;<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">cat</span> &gt; $cfg<span class="hljs-variable">$eth</span> &lt;&lt;!<br>  TYPE=Ethernet<br>  PROXY_METHOD=none<br>  BROWSER_ONLY=no<br>  BOOTPROTO=static<br>  DEFROUTE=<span class="hljs-built_in">yes</span><br>  IPV4_FAILURE_FATAL=no<br>  IPADDR=<span class="hljs-variable">$ip1</span><br>  NETMASK=<span class="hljs-variable">$mask1</span><br>  DNS1=<span class="hljs-variable">$ds1</span><br>  NAME=<span class="hljs-variable">$eth</span><br>  GATEWAY=<span class="hljs-variable">$gw1</span><br>  ONBOOT=<span class="hljs-built_in">yes</span><br>!<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">echo</span> -e  <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> ----------准备重启网络，请等待-----------<span class="hljs-variable">$end</span>&quot;</span><br>systemctl restart network<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> ----------网络重启完成-----------<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>脚本批量创建双向信任</title>
    <link href="/2022/05/16/%E8%84%9A%E6%9C%AC%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E5%8F%8C%E5%90%91%E4%BF%A1%E4%BB%BB/"/>
    <url>/2022/05/16/%E8%84%9A%E6%9C%AC%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E5%8F%8C%E5%90%91%E4%BF%A1%E4%BB%BB/</url>
    
    <content type="html"><![CDATA[<figure class="highlight gradle"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs gradle">ssh-keygen -p <span class="hljs-string">&quot;&quot;</span> -f <span class="hljs-regexp">/root/</span>.ssh/id_rsa<br><br>ssh-<span class="hljs-keyword">copy</span>-id -i root@<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ansible srete]# cat copykey.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment">#********************************************************************</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Author: chenmeng</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">QQ: 903575406</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Date: 2022-04-27</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">FileName： copykey.sh</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Description： A <span class="hljs-built_in">test</span> script</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Copyright (C): 2022 All rights reserved</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">********************************************************************</span><br>net=10.0.6<br>for i in &#123;100..112&#125;;do<br>ip=$net.$i<br>&#123;<br>sshpass -p Cm123456 scp -o StrictHostKeyChecking=no -r /root/.ssh root@$ip:/root<br>&#125;&amp;<br>done<br>wait<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ansible批量创建信任</title>
    <link href="/2022/05/16/ansible%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E4%BF%A1%E4%BB%BB/"/>
    <url>/2022/05/16/ansible%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E4%BF%A1%E4%BB%BB/</url>
    
    <content type="html"><![CDATA[<figure class="highlight yaml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">/etc/ansible/ansible.cfg</span><br><span class="hljs-string">host_key_checking</span> <span class="hljs-string">=</span> <span class="hljs-literal">False</span><br>[<span class="hljs-string">srv</span>]<br><span class="hljs-number">10.0</span><span class="hljs-number">.6</span><span class="hljs-string">.[100:111]</span><br>[<span class="hljs-string">srv:vars</span>]<br><span class="hljs-string">ansible_ssh_pass=&quot;Cm123456&quot;</span><br><br><span class="hljs-string">playbook</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br><span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br><br><span class="hljs-attr">tasks:</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">ssh</span> <span class="hljs-string">key</span><br><span class="hljs-attr">authorized_key:</span> <span class="hljs-string">user=root</span><br><span class="hljs-string">key=&quot;&#123;&#123;</span> <span class="hljs-string">lookup(&#x27;file&#x27;,</span> <span class="hljs-string">&#x27;/root/.ssh/id_rsa.pub&#x27;</span><span class="hljs-string">)</span> <span class="hljs-string">&#125;&#125;&quot;</span><br><span class="hljs-string">state=present</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>自动化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos MOBA x11图形显示</title>
    <link href="/2022/05/16/u0016centos-MOBA-x11%E5%9B%BE%E5%BD%A2%E6%98%BE%E7%A4%BA/"/>
    <url>/2022/05/16/u0016centos-MOBA-x11%E5%9B%BE%E5%BD%A2%E6%98%BE%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">yum install xorg-x11-xauth xorg-x11-fonts-* xorg-x11-font-utils xorg-x11-fonts-Type1 firefox<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第八周作业</title>
    <link href="/2022/05/16/%E7%AC%AC%E5%85%AB%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/05/16/%E7%AC%AC%E5%85%AB%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="创建私有CA并进行证书申请。"><a href="#创建私有CA并进行证书申请。" class="headerlink" title="创建私有CA并进行证书申请。"></a><font size=4><strong>创建私有CA并进行证书申请。</strong></font></h1><h2 id="创建CA相关目录和文件"><a href="#创建CA相关目录和文件" class="headerlink" title="创建CA相关目录和文件"></a><font size=3>创建CA相关目录和文件</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">[root@test1 ~]# mkdir /etc/pki/CA/&#123;certs,crl,newcerts,private&#125; -p<br>[root@test1 ~]# touch /etc/pki/CA/index.txt<br>[root@test1 ~]# echo 0F &gt; /etc/pki/CA/serial<br></code></pre></td></tr></table></figure><h2 id="创建CA私钥，指定私钥长度是2048，权限为600"><a href="#创建CA私钥，指定私钥长度是2048，权限为600" class="headerlink" title="创建CA私钥，指定私钥长度是2048，权限为600"></a><font size=3>创建CA私钥，指定私钥长度是2048，权限为600</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test1 CA]# (umask 066; openssl genrsa -out private/cakey.pem 2048)<br>Generating RSA private key, 2048 bit long modulus<br>...............................................................................+++<br>...............................................................................................................................+++<br>e is 65537 (0x10001)<br></code></pre></td></tr></table></figure><h2 id="交互式界面使用刚刚创建的私钥给CA颁发自签名证书，指定有效期为10年，证书保存路径为-etc-pki-CA-证书名称为cacert-pem"><a href="#交互式界面使用刚刚创建的私钥给CA颁发自签名证书，指定有效期为10年，证书保存路径为-etc-pki-CA-证书名称为cacert-pem" class="headerlink" title="交互式界面使用刚刚创建的私钥给CA颁发自签名证书，指定有效期为10年，证书保存路径为/etc/pki/CA/ 证书名称为cacert.pem"></a><font size=3>交互式界面使用刚刚创建的私钥给CA颁发自签名证书，指定有效期为10年，证书保存路径为/etc/pki/CA/ 证书名称为cacert.pem</font></h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@test1 CA]# openssl req -<span class="hljs-built_in">new</span> -x509 -key /etc/pki/CA/private/cakey.pem -days <span class="hljs-number">3650</span> -<span class="hljs-keyword">out</span> /etc/pki/CA/cacert.pem<br>You are about <span class="hljs-keyword">to</span> be asked <span class="hljs-keyword">to</span> enter information that will be incorporated<br><span class="hljs-keyword">into</span> your certificate request.<br>What you are about <span class="hljs-keyword">to</span> enter <span class="hljs-keyword">is</span> what <span class="hljs-keyword">is</span> <span class="hljs-keyword">called</span> a Distinguished <span class="hljs-type">Name</span> <span class="hljs-keyword">or</span> a DN.<br>There are quite a few fields but you can leave <span class="hljs-keyword">some</span> blank<br><span class="hljs-keyword">For</span> <span class="hljs-keyword">some</span> fields there will be a <span class="hljs-keyword">default</span> <span class="hljs-keyword">value</span>,<br><span class="hljs-keyword">If</span> you enter <span class="hljs-string">&#x27;.&#x27;</span>, the field will be left blank.<br><span class="hljs-comment">-----</span><br>Country <span class="hljs-type">Name</span> (<span class="hljs-number">2</span> letter code) [XX]:china<br>string <span class="hljs-keyword">is</span> too long, it needs <span class="hljs-keyword">to</span> be less than  <span class="hljs-number">2</span> bytes long<br>Country <span class="hljs-type">Name</span> (<span class="hljs-number">2</span> letter code) [XX]:CN<br>State <span class="hljs-keyword">or</span> Province <span class="hljs-type">Name</span> (<span class="hljs-keyword">full</span> <span class="hljs-type">name</span>) []:jiangsu<br>Locality <span class="hljs-type">Name</span> (eg, city) [<span class="hljs-keyword">Default</span> City]:wuxi<br>Organization <span class="hljs-type">Name</span> (eg, company) [<span class="hljs-keyword">Default</span> Company Ltd]:mh<br>Organizational Unit <span class="hljs-type">Name</span> (eg, section) []:it<br>Common <span class="hljs-type">Name</span> (eg, your <span class="hljs-type">name</span> <span class="hljs-keyword">or</span> your <span class="hljs-keyword">server</span><span class="hljs-string">&#x27;s hostname) []:10.0.6.100</span><br><span class="hljs-string">Email Address []:</span><br></code></pre></td></tr></table></figure><h2 id="通过命令查看申请的自签名证书详细信息"><a href="#通过命令查看申请的自签名证书详细信息" class="headerlink" title="通过命令查看申请的自签名证书详细信息"></a><font size=3>通过命令查看申请的自签名证书详细信息</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test1 CA]# openssl x509 -in /etc/pki/CA/cacert.pem -noout -text<br>Certificate:<br>    Data:<br>        Version: 3 (0x2)<br>        Serial Number:<br>            91:1e:ff:c2:75:ca:b8:af<br>    Signature Algorithm: sha256WithRSAEncryption<br>        Issuer: C=CN, ST=jiangsu, L=wuxi, O=mh, OU=it, CN=10.0.6.100<br>        Validity<br>            Not Before: May  9 11:10:01 2022 GMT<br>            Not After : May  6 11:10:01 2032 GMT<br>        Subject: C=CN, ST=jiangsu, L=wuxi, O=mh, OU=it, CN=10.0.6.100<br>        Subject Public Key Info:<br>            Public Key Algorithm: rsaEncryption<br>                Public-Key: (2048 bit)<br>                Modulus:<br>                    00:bd:c5:9d:23:e9:c5:9c:8f:93:0d:ca:d1:b3:ad:<br>                    e3:aa:40:50:0c:ba:25:46:b3:c0:5a:42:4b:70:be:<br>                    61:9e:e5:15:18:4d:1f:ef:5c:d2:da:5b:65:b9:93:<br>                    c1:3d:06:9d:66:00:d4:19:22:59:f3:f4:21:48:c6:<br>                    63:d9:81:25:00:43:02:04:cd:8d:51:cc:48:f3:72:<br>                    0f:13:f9:b1:8e:db:c8:60:c6:7b:51:9d:e7:1f:23:<br>                    29:56:fd:0e:19:17:67:6e:54:0b:31:13:d4:ea:dd:<br>                    c9:e9:25:c6:1c:8d:06:3e:59:b0:b9:8b:3c:94:5c:<br>                    30:bf:51:8a:b6:67:6f:da:4f:9c:a4:19:37:10:1b:<br>                    4d:06:a3:a4:28:51:d8:9e:58:e5:bf:15:02:4f:e1:<br>                    8e:cd:79:30:02:da:02:4e:1b:c6:62:cf:9c:71:cb:<br>                    49:3d:ec:89:1f:66:ff:d4:fc:fe:93:7d:32:70:04:<br>                    80:06:d0:52:6e:f5:88:60:04:2b:43:55:b9:f7:8a:<br>                    6f:2b:bd:55:0b:47:9a:82:7f:4b:cb:82:08:f8:1e:<br>                    c4:10:fe:c1:db:61:36:d0:cc:3d:e9:1c:f0:0d:36:<br>                    21:eb:77:be:e3:ce:e8:f6:75:d5:c8:3c:e9:9a:39:<br>                    e0:a7:a8:d4:ea:d0:52:af:43:9b:a2:2e:4e:5a:ed:<br>                    d5:f1<br>                Exponent: 65537 (0x10001)<br>        X509v3 extensions:<br>            X509v3 Subject Key Identifier:<br>                FD:7E:85:89:6C:9C:C4:E6:5B:BE:04:E7:68:26:98:8A:3A:91:05:6B<br>            X509v3 Authority Key Identifier:<br>                keyid:FD:7E:85:89:6C:9C:C4:E6:5B:BE:04:E7:68:26:98:8A:3A:91:05:6B<br> <br>            X509v3 Basic Constraints:<br>                CA:TRUE<br>    Signature Algorithm: sha256WithRSAEncryption<br>         53:19:17:70:88:94:d7:2b:84:30:e2:a1:ee:7a:31:20:62:21:<br>         1a:50:d7:0c:c0:79:de:17:2e:c1:4d:e9:9f:42:e5:18:5e:77:<br>         c7:39:7e:f5:05:32:ee:ed:cd:a3:d1:00:c8:73:16:f5:af:1e:<br>         85:aa:58:f6:16:96:f6:37:71:63:60:3f:79:83:6c:25:71:fd:<br>         25:dd:8b:af:90:4f:f5:15:bb:5f:f0:4a:cc:ec:4d:07:68:ec:<br>         be:09:f1:f4:2b:5c:6a:5b:37:15:21:ad:23:2f:8b:53:0d:78:<br>         89:8d:8d:36:ed:e4:05:63:13:57:c3:74:10:aa:ab:30:33:08:<br>         ed:9b:b9:0b:ac:b1:a6:82:38:b0:4e:0b:6e:3e:7a:3b:2d:96:<br>         63:b7:62:4a:fb:62:b2:78:10:8f:50:dc:8b:51:87:b1:9c:b1:<br>         78:7a:ef:26:b0:bb:80:46:7b:9d:64:45:9a:68:c5:8a:08:11:<br>         27:c7:48:a0:40:68:74:c1:f3:d9:00:fb:56:6a:a5:7f:12:d3:<br>         41:ec:3e:4a:88:35:f7:6c:40:ec:f8:8a:bf:48:a2:25:a8:cb:<br>         f9:01:c7:ff:fd:2b:fa:7a:d9:6a:0c:5e:c1:a9:0d:e1:54:77:<br>         c5:5c:75:6b:1d:5b:7a:8a:ee:44:3d:f0:29:ed:18:ae:75:8e:<br>         7c:d6:44:76<br></code></pre></td></tr></table></figure><h2 id="将证书文件拷贝至WINDOWS电脑，修改后缀为crt可以更直观的看到证书颁发的详细信息，自签名证书颁发成功"><a href="#将证书文件拷贝至WINDOWS电脑，修改后缀为crt可以更直观的看到证书颁发的详细信息，自签名证书颁发成功" class="headerlink" title="将证书文件拷贝至WINDOWS电脑，修改后缀为crt可以更直观的看到证书颁发的详细信息，自签名证书颁发成功"></a><font size=3>将证书文件拷贝至WINDOWS电脑，修改后缀为crt可以更直观的看到证书颁发的详细信息，自签名证书颁发成功</font></h2><img src="%E7%AC%AC%E5%85%AB%E5%91%A8%E4%BD%9C%E4%B8%9A/2773317-20220509192000381-2012421592.png" width="70%"><h2 id="生成用户私钥-命名为app1-key，有效期700天，保存在-data-app1目录下"><a href="#生成用户私钥-命名为app1-key，有效期700天，保存在-data-app1目录下" class="headerlink" title="生成用户私钥 命名为app1.key，有效期700天，保存在/data/app1目录下"></a><font size=3>生成用户私钥 命名为app1.key，有效期700天，保存在/data/app1目录下</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test1 ~]# mkdir /data/app1<br>[root@test1 ~]# (umask 066;openssl genrsa -out /data/app1/app1.key 2048 -days 700)<br>Generating RSA private key, 2048 bit long modulus<br>......................................................+++<br>.......+++<br>e is 65537 (0x10001)<br></code></pre></td></tr></table></figure><h2 id="生成证书申请文件需要注意查看“-etc-pki-tls“目录下的openssl-cnf文件，若策略为match-则”countryName-“-”stateOrProvinceName“-”organizationName“-三个选项需要和自签名证书保持一致"><a href="#生成证书申请文件需要注意查看“-etc-pki-tls“目录下的openssl-cnf文件，若策略为match-则”countryName-“-”stateOrProvinceName“-”organizationName“-三个选项需要和自签名证书保持一致" class="headerlink" title="生成证书申请文件需要注意查看“/etc/pki/tls“目录下的openssl.cnf文件，若策略为match,则”countryName “ ”stateOrProvinceName“ ”organizationName“ 三个选项需要和自签名证书保持一致"></a><font size=3>生成证书申请文件需要注意查看“/etc/pki/tls“目录下的openssl.cnf文件，若策略为match,则”countryName “ ”stateOrProvinceName“ ”organizationName“ 三个选项需要和自签名证书保持一致</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test1 ~]# openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter &#x27;.&#x27;, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN<br>State or Province Name (full name) []:jiangsu<br>Locality Name (eg, city) [Default City]:wuxi<br>Organization Name (eg, company) [Default Company Ltd]:mh<br>Organizational Unit Name (eg, section) []:it<br>Common Name (eg, your name or your server&#x27;s hostname) []:mingheng.com<br>Email Address []:<br> <br>Please enter the following &#x27;extra&#x27; attributes<br>to be sent with your certificate request<br>A challenge password []:<br>An optional company name []:<br></code></pre></td></tr></table></figure><h2 id="CA颁发证书"><a href="#CA颁发证书" class="headerlink" title=" CA颁发证书"></a><font size=3> CA颁发证书</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test1 ~]# openssl ca -in /data/app1/app1.csr -out /etc/pki/CA/certs/app1.crt -days 1000<br>Using configuration from /etc/pki/tls/openssl.cnf<br>Check that the request matches the signature<br>Signature ok<br>Certificate Details:<br>        Serial Number: 15 (0xf)<br>        Validity<br>            Not Before: May  9 11:44:05 2022 GMT<br>            Not After : Feb  2 11:44:05 2025 GMT<br>        Subject:<br>            countryName               = CN<br>            stateOrProvinceName       = jiangsu<br>            organizationName          = mh<br>            organizationalUnitName    = it<br>            commonName                = mingheng.com<br>        X509v3 extensions:<br>            X509v3 Basic Constraints:<br>                CA:FALSE<br>            Netscape Comment:<br>                OpenSSL Generated Certificate<br>            X509v3 Subject Key Identifier:<br>                63:E0:74:8B:20:8D:5B:CA:CE:FB:C4:95:04:E7:25:B8:65:CE:25:55<br>            X509v3 Authority Key Identifier:<br>                keyid:FD:7E:85:89:6C:9C:C4:E6:5B:BE:04:E7:68:26:98:8A:3A:91:05:6B<br> <br>Certificate is to be certified until Feb  2 11:44:05 2025 GMT (1000 days)<br>Sign the certificate? [y/n]:y<br> <br> <br>1 out of 1 certificate requests certified, commit? [y/n]y<br>Write out database with 1 new entries<br>Data Base Updated<br></code></pre></td></tr></table></figure><h2 id="颁发后查看serial序号变为10"><a href="#颁发后查看serial序号变为10" class="headerlink" title="颁发后查看serial序号变为10"></a><font size=3>颁发后查看serial序号变为10</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test1 ~]# cat /etc/pki/CA/serial<br>10[root@test1 ~]# tree /etc/pki/CA/<br>/etc/pki/CA/<br>├── cacert.pem<br>├── certs<br>│   └── app1.crt<br>├── crl<br>├── index.txt<br>├── index.txt.attr<br>├── index.txt.old<br>├── newcerts<br>│   └── 0F.pem<br>├── private<br>│   └── cakey.pem<br>├── serial<br>└── serial.old<br></code></pre></td></tr></table></figure><h1 id="总结ssh常用参数，用法"><a href="#总结ssh常用参数，用法" class="headerlink" title="总结ssh常用参数，用法"></a><font size=4><strong>总结ssh常用参数，用法</strong></font></h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ssh -p 连接ssh服务端时跟上端口<br>ssh -o 后面跟上菜单，比较常用的有”<span class="hljs-attribute">StrictHostKeyChecking</span>=<span class="hljs-literal">no</span>“ 跟上这个参数，可以跳过首次登陆需要验证指纹的选项 在使用sshpass和scp命令时也可以跟上此命令，避免交互式操作<br>sshpass -p 跟上密码，避免交互式输入密码，配合scp -o参数使用<span class="hljs-keyword">for</span>循环，可以实现批量拷贝文件至局域网内主机<br>ssh -L 本地端口转发<br>ssh -R 远程端口转发<br>sshfs ip:目录 可以实现挂载远程目录<br></code></pre></td></tr></table></figure><h1 id="总结sshd服务常用参数"><a href="#总结sshd服务常用参数" class="headerlink" title="总结sshd服务常用参数"></a><font size=4><strong>总结sshd服务常用参数</strong></font></h1><p>ssh服务器配置文件位于 /etc/ssh/sshd_config</p><p>比较常用的参数有：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">Port <span class="hljs-comment">#生产建议修改</span><br>ListenAddress ip<br>LoginGraceTime <span class="hljs-number">2</span>m<br>PermitRootLogin <span class="hljs-literal">yes</span> <span class="hljs-comment">#默认ubuntu不允许root远程ssh登录</span><br>StrictModes <span class="hljs-literal">yes</span> <span class="hljs-comment">#检查.ssh/文件的所有者，权限等</span><br>MaxAuthTries <span class="hljs-number">6</span> <span class="hljs-comment">#pecifies the maximum number of authentication</span><br>attempts permitted per connection. Once the number <span class="hljs-keyword">of</span> failures reaches half this<br>value, additional failures are logged. The <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> <span class="hljs-number">6.</span><br>MaxSessions <span class="hljs-number">10</span> <span class="hljs-comment">#同一个连接最大会话</span><br>PubkeyAuthentication <span class="hljs-literal">yes</span> <span class="hljs-comment">#基于key验证</span><br>PermitEmptyPasswords <span class="hljs-literal">no</span> <span class="hljs-comment">#空密码连接</span><br>PasswordAuthentication <span class="hljs-literal">yes</span> <span class="hljs-comment">#基于用户名和密码连接</span><br>GatewayPorts <span class="hljs-literal">no</span><br>ClientAliveInterval <span class="hljs-number">10</span> <span class="hljs-comment">#单位:秒</span><br>ClientAliveCountMax <span class="hljs-number">3</span> <span class="hljs-comment">#默认3</span><br>UseDNS <span class="hljs-literal">yes</span> <span class="hljs-comment">#提高速度可改为no</span><br>GSSAPIAuthentication <span class="hljs-literal">yes</span> <span class="hljs-comment">#提高速度可改为no</span><br>MaxStartups <span class="hljs-comment">#未认证连接最大值，默认值10</span><br>Banner /path/file<br><span class="hljs-comment">#以下可以限制可登录用户的办法：</span><br>AllowUsers user1 user2 user3<br>DenyUsers user1 user2 user3<br>AllowGroups g1 g2<br>DenyGroups g1 g2<br></code></pre></td></tr></table></figure><h1 id="搭建dhcp服务，实现ip地址申请分发"><a href="#搭建dhcp服务，实现ip地址申请分发" class="headerlink" title="搭建dhcp服务，实现ip地址申请分发"></a><font size=4><strong>搭建dhcp服务，实现ip地址申请分发</strong></font></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell">安装DHCP服务<br>[root@ansible ~]# yum install -y dhcp<br>已加载插件：fastestmirror<br>Repository base is listed more than once in the configuration<br>Loading mirror speeds from cached hostfile<br>docker-ce-stable                                                                                       | 3.5 kB  00:00:00<br>docker-ce-stable/7/x86_64/primary_db                                                                   |  76 kB  00:00:00<br>正在解决依赖关系<br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span><br><span class="hljs-meta prompt_">---&gt; </span><span class="language-bash">软件包 dhcp.x86_64.12.4.2.5-82.el7.centos 将被 安装</span><br><span class="hljs-meta prompt_">--&gt; </span><span class="language-bash">解决依赖关系完成</span><br> <br>依赖关系解决<br> <br>==============================================================================================================================<br> Package                 架构                      版本                                         源                       大小<br>==============================================================================================================================<br>正在安装:<br> dhcp                    x86_64                    12:4.2.5-82.el7.centos                       base                    515 k<br> <br>事务概要<br>==============================================================================================================================<br>安装  1 软件包<br> <br>总下载量：515 k<br>安装大小：1.4 M<br>Downloading packages:<br>Running transaction check<br>Running transaction test<br>Transaction test succeeded<br>Running transaction<br>  正在安装    : 12:dhcp-4.2.5-82.el7.centos.x86_64                                                                        1/1<br>  验证中      : 12:dhcp-4.2.5-82.el7.centos.x86_64                                                                        1/1<br> <br>已安装:<br>  dhcp.x86_64 12:4.2.5-82.el7.centos<br> <br>完毕！<br></code></pre></td></tr></table></figure><h2 id="制作DHCP文件"><a href="#制作DHCP文件" class="headerlink" title="制作DHCP文件"></a><font size=3>制作DHCP文件</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ansible ~]# cp /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example /etc/dhcp/dhcpd.conf<br></code></pre></td></tr></table></figure><h2 id="修改DHCP文件"><a href="#修改DHCP文件" class="headerlink" title="修改DHCP文件"></a><font size=3>修改DHCP文件</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">配置DNS<br><span class="hljs-meta prompt_"># </span><span class="language-bash">option definitions common to all supported networks...</span><br>         option domain-name &quot;example.org&quot;;<br>         option domain-name-servers 10.0.6.26；<br>子网配置（next-server和pxelinux.0为制作pxe启动时需要配置，若只作为DHCP服务器不需要）<br>      # DHCP server to understand the network topology.<br>          subnet 10.1.81.0 netmask 255.255.255.0 &#123;<br>          range 10.1.81.20 10.1.81.28;<br>          option routers 10.1.81.254;<br>          next-server 10.1.81.126;<br>          filename &quot;pxelinux.0&quot;;<br>          &#125;<br></code></pre></td></tr></table></figure><h2 id="配置完成启动DHCP服务"><a href="#配置完成启动DHCP服务" class="headerlink" title="配置完成启动DHCP服务"></a><font size=3>配置完成启动DHCP服务</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ansible ~]# systemctl start dhcpd<br>[root@ansible ~]# systemctl status dhcpd<br>● dhcpd.service - DHCPv4 Server Daemon<br>   Loaded: loaded (/usr/lib/systemd/system/dhcpd.service; disabled; vendor preset: disabled)<br>   Active: active (running) since 一 2022-05-09 20:16:15 CST; 8min ago<br>     Docs: man:dhcpd(8)<br>           man:dhcpd.conf(5)<br> Main PID: 9149 (dhcpd)<br>   Status: &quot;Dispatching packets...&quot;<br>    Tasks: 1<br>   CGroup: /system.slice/dhcpd.service<br>           └─9149 /usr/sbin/dhcpd -f -cf /etc/dhcp/dhcpd.conf -user dhcpd -group dhcpd --no-pid<br> <br>5月 09 20:23:04 ansible dhcpd[9149]: DHCPDISCOVER from 00:50:56:a4:65:48 via eth1<br>5月 09 20:23:04 ansible dhcpd[9149]: DHCPOFFER on 10.0.6.121 to 00:50:56:a4:65:48 via eth1<br>5月 09 20:23:24 ansible dhcpd[9149]: DHCPDISCOVER from 00:50:56:a4:65:48 via eth1<br>5月 09 20:23:24 ansible dhcpd[9149]: DHCPOFFER on 10.0.6.121 to 00:50:56:a4:65:48 via eth1<br>5月 09 20:23:38 ansible dhcpd[9149]: DHCPDISCOVER from 00:50:56:a4:65:48 via eth1<br>5月 09 20:23:38 ansible dhcpd[9149]: DHCPOFFER on 10.0.6.121 to 00:50:56:a4:65:48 via eth1<br>5月 09 20:23:51 ansible dhcpd[9149]: DHCPDISCOVER from 00:50:56:a4:65:48 via eth1<br>5月 09 20:23:51 ansible dhcpd[9149]: DHCPOFFER on 10.0.6.121 to 00:50:56:a4:65:48 via eth1<br>5月 09 20:24:07 ansible dhcpd[9149]: DHCPDISCOVER from 00:50:56:a4:65:48 via eth1<br>5月 09 20:24:07 ansible dhcpd[9149]: DHCPOFFER on 10.0.6.121 to 00:50:56:a4:65:48 via eth1<br></code></pre></td></tr></table></figure><h2 id="在客户端使用命令测试能否正常获取IP"><a href="#在客户端使用命令测试能否正常获取IP" class="headerlink" title="在客户端使用命令测试能否正常获取IP"></a><font size=3>在客户端使用命令测试能否正常获取IP</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test2 ~]# dhclient -s 10.0.6.25<br>[root@test2 ~]# ip a<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host<br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    link/ether 00:50:56:a4:0f:ac brd ff:ff:ff:ff:ff:ff<br>    inet 10.0.6.101/24 brd 10.0.6.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet 10.0.6.123/24 brd 10.0.6.255 scope global secondary dynamic eth0<br>       valid_lft 359998sec preferred_lft 359998sec<br>    inet6 fe80::250:56ff:fea4:fac/64 scope link<br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第六周作业</title>
    <link href="/2022/05/16/%E7%AC%AC%E5%85%AD%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/05/16/%E7%AC%AC%E5%85%AD%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="编写脚本实现登陆远程主机。（使用expect和shell脚本两种形式）"><a href="#编写脚本实现登陆远程主机。（使用expect和shell脚本两种形式）" class="headerlink" title="编写脚本实现登陆远程主机。（使用expect和shell脚本两种形式）"></a><font size=4>编写脚本实现登陆远程主机。（使用expect和shell脚本两种形式）</font></h1><p><font color=#FF0000>expect</font></p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[root@ansible srete]<span class="hljs-comment"># cat telnet</span><br><span class="hljs-comment">#!/usr/bin/expect</span><br><span class="hljs-built_in">set</span> user user<br><span class="hljs-built_in">set</span> passwd passwd<br>spawn telnet [lindex <span class="hljs-variable">$argv</span> 0]<br>expect &#123;<br>  <span class="hljs-string">&quot;Username&quot;</span>  &#123; send <span class="hljs-string">&quot;<span class="hljs-variable">$user</span>\n&quot;</span>;exp_continue &#125;<br>  <span class="hljs-string">&quot;Password&quot;</span>  &#123; send <span class="hljs-string">&quot;<span class="hljs-variable">$passwd</span>\n&quot;</span> &#125;<br> &#125;<br> interact&lt;br&gt;<span class="hljs-built_in">alias</span> telnet=<span class="hljs-string">&#x27;/root/srete/telnet&#x27;</span><br>[root@ansible srete]<span class="hljs-comment"># telnet 10.1.81.254</span><br>spawn telnet 10.1.81.254<br>Trying 10.1.81.254...<br>Connected to 10.1.81.254.<br>Escape character is <span class="hljs-string">&#x27;^]&#x27;</span>.<br> <br>Warning: Telnet is not a secure protocol, and it is recommended to use Stelnet.<br> <br>Login authentication<br> <br> <br>Username:admin<br>admin<br>Password:<br>Info: The max number of VTY <span class="hljs-built_in">users</span> is 10, and the number<br>      of current VTY <span class="hljs-built_in">users</span> on line is 1.<br>      The current login time is 2022-04-12 09:08:43+00:00.<br>&lt;OFFICE_8F&gt;<br></code></pre></td></tr></table></figure><p><font color=#FF0000>shell</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible srete]<span class="hljs-comment"># cat telnet.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author:                陈濛</span><br><span class="hljs-comment">#Date:                  2022-04-12</span><br><span class="hljs-comment">#FileName：             telnet.sh</span><br><span class="hljs-comment">#Description：          Create from cm</span><br><span class="hljs-comment">#Copyright (C):        2022 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br>user=***<br>passwd=***<br>expect &lt;&lt;!<br>spawn telnet <span class="hljs-variable">$1</span><br>expect &#123;<br>  <span class="hljs-string">&quot;Username&quot;</span>  &#123; send <span class="hljs-string">&quot;<span class="hljs-variable">$user</span>\n&quot;</span>;exp_continue &#125;<br>  <span class="hljs-string">&quot;Password&quot;</span>  &#123; send <span class="hljs-string">&quot;<span class="hljs-variable">$passwd</span>\n&quot;</span> &#125;<br> &#125;<br>expect eof<br>!<br>[root@ansible srete]<span class="hljs-comment"># sh telnet.sh 10.1.81.254</span><br>spawn telnet 10.1.81.254<br>Trying 10.1.81.254...<br>Connected to 10.1.81.254.<br>Escape character is <span class="hljs-string">&#x27;^]&#x27;</span>.<br> <br>Warning: Telnet is not a secure protocol, and it is recommended to use Stelnet.<br> <br>Login authentication<br> <br> <br>Username:admin<br>admin<br>Password:<br>Info: The max number of VTY <span class="hljs-built_in">users</span> is 10, and the number<br>      of current VTY <span class="hljs-built_in">users</span> on line is 1.<br>      The current login time is 2022-04-12 09:41:35+00:00.<br>&lt;OFFICE_8F&gt;<br></code></pre></td></tr></table></figure><h1 id="生成10个随机数保存于数组中，并找出其最大值和最小值"><a href="#生成10个随机数保存于数组中，并找出其最大值和最小值" class="headerlink" title="生成10个随机数保存于数组中，并找出其最大值和最小值"></a><font size=4>生成10个随机数保存于数组中，并找出其最大值和最小值</font></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">declare</span> -i min max<br><span class="hljs-built_in">declare</span> -a nums<br><span class="hljs-keyword">for</span> ((i=0;i&lt;10;i++));<span class="hljs-keyword">do</span><br>nums[<span class="hljs-variable">$i</span>]=<span class="hljs-variable">$RANDOM</span><br>[ <span class="hljs-variable">$i</span> -eq 0 ] &amp;&amp; min=<span class="hljs-variable">$&#123;nums[0]&#125;</span> &amp;&amp; max=<span class="hljs-variable">$&#123;nums[0]&#125;</span>&amp;&amp; <span class="hljs-built_in">continue</span><br>[ <span class="hljs-variable">$&#123;nums[$i]&#125;</span> -gt <span class="hljs-variable">$max</span> ] &amp;&amp; max=<span class="hljs-variable">$&#123;nums[$i]&#125;</span> &amp;&amp; <span class="hljs-built_in">continue</span><br>[ <span class="hljs-variable">$&#123;nums[$i]&#125;</span> -lt <span class="hljs-variable">$min</span> ] &amp;&amp; min=<span class="hljs-variable">$&#123;nums[$i]&#125;</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;All numbers are <span class="hljs-variable">$&#123;nums[*]&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> Max is <span class="hljs-variable">$max</span><br><span class="hljs-built_in">echo</span> Min is <span class="hljs-variable">$min</span><br></code></pre></td></tr></table></figure><h1 id="输入若干个数值存入数组中，采用冒泡算法进行升序或降序排序"><a href="#输入若干个数值存入数组中，采用冒泡算法进行升序或降序排序" class="headerlink" title="输入若干个数值存入数组中，采用冒泡算法进行升序或降序排序"></a><font size=4>输入若干个数值存入数组中，采用冒泡算法进行升序或降序排序</font></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入数值个数：&quot;</span> COUNT<br><span class="hljs-built_in">declare</span> -a nums<br><span class="hljs-keyword">for</span> ((i=0;i&lt;<span class="hljs-variable">$COUNT</span>;i++));<span class="hljs-keyword">do</span><br>    num[<span class="hljs-variable">$i</span>]=<span class="hljs-variable">$RANDOM</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The initial array:&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;num[@]&#125;</span><br><br><span class="hljs-built_in">declare</span> -i n=<span class="hljs-variable">$COUNT</span><br><span class="hljs-keyword">for</span> (( i=0; i&lt;n-1; i++ ));<span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">for</span> (( j=0; j&lt;n-1-i; j++ ));<span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">let</span> x=<span class="hljs-variable">$j</span>+1<br>        <span class="hljs-keyword">if</span> (( <span class="hljs-variable">$&#123;num[$j]&#125;</span> &lt; <span class="hljs-variable">$&#123;num[$x]&#125;</span> ));<span class="hljs-keyword">then</span><br> <span class="hljs-comment">#从大到小排列</span><br>           tmp=<span class="hljs-variable">$&#123;num[$x]&#125;</span><br>            num[<span class="hljs-variable">$x</span>]=<span class="hljs-variable">$&#123;num[$j]&#125;</span><br>            num[<span class="hljs-variable">$j</span>]=<span class="hljs-variable">$tmp</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;After sort:&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;num[*]&#125;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;the max integer is <span class="hljs-variable">$num</span>,the min integer is <span class="hljs-variable">$&#123;num[$((n-1))]&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><h1 id="总结查看系统负载的几种命令，总结top命令的指标大概什么含义-不要求全部写出来"><a href="#总结查看系统负载的几种命令，总结top命令的指标大概什么含义-不要求全部写出来" class="headerlink" title="总结查看系统负载的几种命令，总结top命令的指标大概什么含义(不要求全部写出来)"></a><font size=4>总结查看系统负载的几种命令，总结top命令的指标大概什么含义(不要求全部写出来)</font></h1><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs coq">uptime和w:负载查询<br><br>mpstat：显示CPU相关统计<br><br><span class="hljs-built_in">top</span>和htop: 查看进程实时状态<br><br>free：内存空间<br><br>vmstat：查看虚拟内存信息<br><br>iostat：统计cpu和设备IO信息<br><br>iotop：监视磁盘IO<br><br>iftop：显示网络带宽使用情况<br><br>nload：查看网络实时吞吐量<br><br>iptraf-ng：网络监视工具<br><br>dstat：系统资源统计<br><br>glances：综合监视工具<br><br>lsof：查看进程打开文件<br><br><span class="hljs-built_in">top</span>命令可以查看系统运行时间，平均负载，任务运行状态，如running，sleeping,stopped,zomblel;可以查看cpu利用率，内存利用率；可以查看进程PID，用户，运行时间，命令以及进程使用的cpu和内存占比<br></code></pre></td></tr></table></figure><h1 id="编写脚本，使用for和while分别实现192-168-0-0-24网段内，地址是否能够ping通，若ping通则输出”success-”，若ping不通则输出”fail"><a href="#编写脚本，使用for和while分别实现192-168-0-0-24网段内，地址是否能够ping通，若ping通则输出”success-”，若ping不通则输出”fail" class="headerlink" title="编写脚本，使用for和while分别实现192.168.0.0/24网段内，地址是否能够ping通，若ping通则输出”success!”，若ping不通则输出”fail!"></a><font size=4>编写脚本，使用for和while分别实现192.168.0.0/24网段内，地址是否能够ping通，若ping通则输出”success!”，若ping不通则输出”fail!</font></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author: chenmeng</span><br><span class="hljs-comment">#QQ: 903575406</span><br><span class="hljs-comment">#Date: 2022-04-16</span><br><span class="hljs-comment">#FileName： scanip.sh</span><br><span class="hljs-comment">#Description： A test script</span><br><span class="hljs-comment">#Copyright (C): 2022 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br>net=<span class="hljs-variable">$1</span><br>red=<span class="hljs-string">&quot;\e[1;31m&quot;</span><br>end=<span class="hljs-string">&quot;\e[0;m&quot;</span><br><span class="hljs-function"><span class="hljs-title">scanip</span></span>()&#123;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..254&#125;; <span class="hljs-keyword">do</span><br>ip=<span class="hljs-variable">$net</span>.<span class="hljs-variable">$i</span><br>&#123;<br>ping -c2 -w2 <span class="hljs-variable">$ip</span> &amp;&gt; /dev/null &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span> up&quot;</span> || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span> down&quot;</span><br>&#125;&amp;<br><span class="hljs-built_in">shift</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">wait</span><br>&#125;<br> <br>scanip<br> <br>up=`scanip |awk -F<span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">head</span> -1 |awk -F<span class="hljs-string">&#x27; +&#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>down=`scanip |awk -F<span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">tail</span> -1 |awk -F<span class="hljs-string">&#x27; +&#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 处于UP状态的IP数量为 $up<span class="hljs-variable">$end</span>&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$red</span> 处于DOWN状态的UP数量为$down<span class="hljs-variable">$end</span>&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># cat scanip_w.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author: chenmeng</span><br><span class="hljs-comment">#QQ: 903575406</span><br><span class="hljs-comment">#Date: 2022-04-18</span><br><span class="hljs-comment">#FileName： scanip_w.sh</span><br><span class="hljs-comment">#Description： A test script</span><br><span class="hljs-comment">#Copyright (C): 2022 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br>net=<span class="hljs-variable">$1</span><br>i=1<br><span class="hljs-keyword">while</span> [ <span class="hljs-variable">$i</span> -le 254 ];<span class="hljs-keyword">do</span><br>ip=<span class="hljs-variable">$net</span>.<span class="hljs-variable">$i</span><br>&#123;<br>ping -c2 -w2 <span class="hljs-variable">$ip</span> &amp;&gt; /dev/null &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span> up&quot;</span> || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span> down&quot;</span><br>&#125;&amp;<br><span class="hljs-built_in">let</span> i++<br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">wait</span><br></code></pre></td></tr></table></figure><h1 id="每周的工作日1-30，将-etc备份至-backup目录中，保存的文件名称格式-为“etcbak-yyyy-mm-dd-HH-tar-xz”，其中日期是前一天的时间"><a href="#每周的工作日1-30，将-etc备份至-backup目录中，保存的文件名称格式-为“etcbak-yyyy-mm-dd-HH-tar-xz”，其中日期是前一天的时间" class="headerlink" title="每周的工作日1:30，将/etc备份至/backup目录中，保存的文件名称格式 为“etcbak-yyyy-mm-dd-HH.tar.xz”，其中日期是前一天的时间"></a><font size=4>每周的工作日1:30，将/etc备份至/backup目录中，保存的文件名称格式 为“etcbak-yyyy-mm-dd-HH.tar.xz”，其中日期是前一天的时间</font></h1><p>编写备份脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible srete]<span class="hljs-comment"># cat backupetc.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author: chenmeng</span><br><span class="hljs-comment">#QQ: 903575406</span><br><span class="hljs-comment">#Date: 2022-04-18</span><br><span class="hljs-comment">#FileName： backupetc.sh</span><br><span class="hljs-comment">#Description： A test script</span><br><span class="hljs-comment">#Copyright (C): 2022 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-built_in">dir</span>=ectbak-`<span class="hljs-built_in">date</span> -d <span class="hljs-string">&quot;-1 day&quot;</span> +%F-%T`<br>tar -Jcvf /backup/<span class="hljs-variable">$dir</span>.tar.xz /etc/<br></code></pre></td></tr></table></figure><p>创建计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible srete]<span class="hljs-comment"># crontab -l</span><br>30 1 * * 1-5 /root/srete/backupetc.sh<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第四周作业</title>
    <link href="/2022/05/16/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/05/16/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="自建yum仓库，分别为网络源和本地源"><a href="#自建yum仓库，分别为网络源和本地源" class="headerlink" title="自建yum仓库，分别为网络源和本地源"></a><font size=4>自建yum仓库，分别为网络源和本地源</font></h1><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[base]<br>name=base<br>baseurl=file:///mnt/package<br>        https://mirrors.cloud.tencent.com/centos/<span class="hljs-variable">$releasever</span>/os/x86_64/<br>        https://repo.huaweicloud.com/centos/<span class="hljs-variable">$releasever</span>/os/x86_64/<br>gpgcheck=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7<br>       https://mirrors.cloud.tencent.com/centos/<span class="hljs-variable">$releasever</span>/os/x86_64/RPM-GPG-KEY-CentOS-7<br>       https://repo.huaweicloud.com/centos/<span class="hljs-variable">$releasever</span>/os/x86_64/RPM-GPG-KEY-CentOS-7<br> <br>[epel]<br>name=epel<br>baseurl=file:///var/www/html/epel<br>        http://mirrors.cloud.tencent.com/epel/<span class="hljs-variable">$releasever</span>/x86_64/<br>        https://mirrors.huaweicloud.com/epel/7/x86_64/<br>gpgcheck=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7<br>       http://mirrors.cloud.tencent.com/epel/RPM-GPG-KEY-EPEL-7<br>       https://mirrors.huaweicloud.com/epel/RPM-GPG-KEY-EPEL-7<br>       <br>[root@ansible ~]<span class="hljs-comment"># yum repolist</span><br>已加载插件：fastestmirror, langpacks<br>Determining fastest mirrors<br> * base:<br> * epel:<br>base                                                                                                     | 2.9 kB  00:00:00<br>epel                                                                                                     | 2.9 kB  00:00:00<br>(1/2): base/7/primary_db                                                                                 | 3.2 MB  00:00:00<br>(2/2): epel/7/primary_db                                                                                 | 6.9 MB  00:00:00<br>源标识                                                        源名称                                                      状态<br>base/7                                                        base                                                         4,070<br>epel/7                                                        epel                                                        13,743<br>repolist: 17,813<br>       <br></code></pre></td></tr></table></figure><h1 id="编译安装http2-4，实现可以正常访问，并将编译步骤和结果提交"><a href="#编译安装http2-4，实现可以正常访问，并将编译步骤和结果提交" class="headerlink" title="编译安装http2.4，实现可以正常访问，并将编译步骤和结果提交"></a><font size=4>编译安装http2.4，实现可以正常访问，并将编译步骤和结果提交</font></h1><p>将编译过程写成脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>core=`lscpu | sed -rn <span class="hljs-string">&#x27;/^CPU\(/s/.*: +(.*)/\1/p&#x27;</span>`<br>sed -i <span class="hljs-string">&#x27;/0/a\[epel]\nname=epel\nbaseurl=http://10.0.6.25/epel\nenabled=1\ngpgcheck=0&#x27;</span> /etc/yum.repos.d/local.repo<br>yum clean all<br>yum install -y wget bzip2 apr-devle apr-util-devel gcc pcre-devel<br>wget https://dlcdn.apache.org//httpd/httpd-2.4.52.tar.bz2 --no-check-certificate || &#123; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;下载失败，重试&quot;</span> ; <span class="hljs-built_in">exit</span>; &#125;<br>tar jxvf httpd-2.4.52.tar.bz2<br><span class="hljs-built_in">cd</span> httpd-2.4.52<br>./configure<br>make -j<span class="hljs-variable">$core</span><br>make install<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;PATH=/usr/local/apache2/bin/:$PATH&#x27;</span> &gt; /etc/profile.d/httpd.sh<br>. /etc/profile.d/httpd.sh<br>groupadd -g 1020 -r apache5<br>useradd -g apache5 -u 1020 -s /sbin/nologin apache5<br>sed -i -e <span class="hljs-string">&#x27;s#User daemon#User apache5#&#x27;</span> -e <span class="hljs-string">&#x27;s#Group daemon#Group apache5#&#x27;</span> /usr/local/apache2/conf/httpd.conf<br>apachectl -k start<br>apachectl -k restart<br>firewall-cmd --zone=public --add-port=80/tcp --permanent<br>systemctl restart firewalld<br></code></pre></td></tr></table></figure><p>编译成功,可以访问</p><p><img src="2773317-20220325101953610-1684971343.png" alt="img"></p><h1 id="利用sed-取出ifconfig命令中本机的IPv4地址"><a href="#利用sed-取出ifconfig命令中本机的IPv4地址" class="headerlink" title="利用sed 取出ifconfig命令中本机的IPv4地址"></a><font size=4>利用sed 取出ifconfig命令中本机的IPv4地址</font></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ifconfig eth0 | sed -rn <span class="hljs-string">&#x27;s/inet +(.*) +n.*/\1/p&#x27;</span><br>10.0.6.25<br></code></pre></td></tr></table></figure><h1 id="删除-etc-fstab文件中所有以-开头，后面至少跟一个空白字符的行的行首的-和空白字符"><a href="#删除-etc-fstab文件中所有以-开头，后面至少跟一个空白字符的行的行首的-和空白字符" class="headerlink" title="删除/etc/fstab文件中所有以#开头，后面至少跟一个空白字符的行的行首的#和空白字符"></a><font size=4>删除/etc/fstab文件中所有以#开头，后面至少跟一个空白字符的行的行首的#和空白字符</font></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible srete]<span class="hljs-comment"># sed  &#x27;/^#/d;/^$/d&#x27; /etc/fstab</span><br>/dev/mapper/centos-root /                       xfs     defaults        0 0<br>UUID=fa726e04-47d9-4081-a349-8f4e16c83ff0 /boot                   xfs     defaults        0 0<br>/dev/mapper/centos-swap swap                    swap    defaults        0 0<br></code></pre></td></tr></table></figure><h1 id="处理-etc-fstab路径-使用sed命令取出其目录名和基名"><a href="#处理-etc-fstab路径-使用sed命令取出其目录名和基名" class="headerlink" title="处理/etc/fstab路径,使用sed命令取出其目录名和基名"></a><font size=4>处理/etc/fstab路径,使用sed命令取出其目录名和基名</font></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># echo /etc/fstab | sed -rn &#x27;s@/(.*)/(.*)@\1 \2@p&#x27;</span><br>etc fstab<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第三周作业</title>
    <link href="/2022/05/16/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/05/16/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="统计出-etc-passwd文件中其默认shell为非-sbin-nologin的用户个数，并将用户都显示出来"><a href="#统计出-etc-passwd文件中其默认shell为非-sbin-nologin的用户个数，并将用户都显示出来" class="headerlink" title="统计出/etc/passwd文件中其默认shell为非/sbin/nologin的用户个数，并将用户都显示出来"></a><font size=4><strong>统计出/etc/passwd文件中其默认shell为非/sbin/nologin的用户个数，并将用户都显示出来</strong></font></h1><p>使用“cat /etc/passwd” 命令查看配置文件，/sbin/nologin都是作为行尾</p><p><img src="2773317-20220319094659705-1926247107.png" alt="img"></p><p>使用正则表达式位置锚定将以任意字符开头，以/sbin/nologin结尾的用户匹配出来</p><p><img src="2773317-20220319095001421-991344571.png" alt="img"></p><p>确认所有/sbin/nologin用户都匹配出来后，使用grep -v选项将非s用户匹配出来</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/passwd | grep -v ``<span class="hljs-string">&quot;\(^.*/sbin/nologin$\)&quot;</span><br></code></pre></td></tr></table></figure><p><img src="2773317-20220319095232371-646067497-16527067583135.png" alt="img"></p><p> 一个用户是一行，此时可以使用wc -l 将行数统计出来，统计出行数就可以统计出题中所需求的用户数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># cat /etc/passwd | grep -v ``&quot;\(^.*/sbin/nologin$\)&quot;` `| wc -l</span><br>13<br></code></pre></td></tr></table></figure><p>使用cut -d命令，以“：”为分隔符，将第一行取出来，就可显示出题中所需用户</p><p><img src="2773317-20220319095533883-1216191009-16527067614797.png" alt="img"></p><h1 id="查出用户UID最大值的用户名、UID及shell类型"><a href="#查出用户UID最大值的用户名、UID及shell类型" class="headerlink" title="查出用户UID最大值的用户名、UID及shell类型"></a><font size=4>查出用户UID最大值的用户名、UID及shell类型</font></h1><p>使用 cat /etc/passwd命令查看配置文件，发现和用户有关的参数格式都是用“USER:x:UID:GID::家目录:shell”这样的格式组成</p><p><img src="2773317-20220319101811066-495234554.png" alt="img"></p><p>  此格式可以用“：”作为分隔符来取数据，但冒号数量不一致，此时可以使用cat /etc/passwd | tr -s “:”命令将冒号进行压缩</p><p> <img src="2773317-20220319102027271-768547198.png" alt="img"></p><p> 将“：”压缩之后，以“：”作为间隔符，使用cut -d”:” -f1,3,7命令取配置的第1，3，7列，这样就将所有用户的 用户名 UID shell类型给取出来了</p><p><img src="2773317-20220319102218257-1934149251.png" alt="img"></p><p>  取出来后的数据，第二行都是大小不等的数字，此时可以使用sort命令 以“：”作为分隔符，取第二列进行反向排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># cat /etc/passwd | tr -s ``&quot;:&quot;` `| cut -d``&quot;:&quot;` `-f1,3,7 | sort -t: -k2 -rn``nfsnobody:65534:/sbin/nologin``cre:2006``user3:2005``user2:2004``user1:2003``slackware:2002``mageia:1100</span><br></code></pre></td></tr></table></figure><p>　　排序后UID最大的用户就显示在了第一行，然后使用head命令取行首，将用户取出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># cat /etc/passwd | tr -s ``&quot;:&quot;` `| cut -d``&quot;:&quot;` `-f1,3,7 | sort -t: -k2 -rn | head -1``nfsnobody:65534:/sbin/nologin</span><br></code></pre></td></tr></table></figure><h1 id="统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序"><a href="#统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序" class="headerlink" title="统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序"></a><font size=4>统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序</font></h1><p>使用 ss -t查看当前连接的远程主机IP</p><p><img src="2773317-20220319112648291-253488091.png" alt="img"></p><p>  需要将目标主机取出来，使用空格作为分隔符，但空格数量布确定 故使用tr -s ‘ ‘命令将空格压缩，然后使用cut命令取出其中第五列，将主机数量取出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ss -t | <span class="hljs-built_in">tr</span> -s ``<span class="hljs-string">&#x27; &#x27;</span>` `| <span class="hljs-built_in">cut</span> -d``<span class="hljs-string">&#x27; &#x27;</span>` `-f 5<br></code></pre></td></tr></table></figure><p> 取出主机数量后发现第一行不是题目所需内容 使用tail -n +2将第一行剔除掉，得到了远程主机的信息</p><p><img src="2773317-20220319113041481-1237596763.png" alt="img"></p><p> 得到远程主机信息后发现后面还带有端口号，使用正则表达式将IP过滤出来</p><p><img src="2773317-20220319113202777-1053812371.png" alt="img"></p><p> 使用 sort命令进行一次排序，将IP地址按照顺序列出来，然后使用uniq -c进行去重和统计IP出现次数</p><p><img src="2773317-20220319113635411-2031102025.png" alt="img"></p><p> 最后使用 sort -nr将IP从大到小排列出来</p><p><img src="2773317-20220319113742846-167530548.png" alt="img"></p><h1 id="编写脚本disk-sh，显示当前硬盘分区中空间利用率最大的值"><a href="#编写脚本disk-sh，显示当前硬盘分区中空间利用率最大的值" class="headerlink" title=" 编写脚本disk.sh，显示当前硬盘分区中空间利用率最大的值"></a><font size=4> 编写脚本disk.sh，显示当前硬盘分区中空间利用率最大的值</font></h1><p>使用df命令查看已经挂载的文件系统信息</p><p><img src="2773317-20220319200522070-1840354352.png" alt="img"></p><p> 使用正则表达式将分区信息和利用率匹配出来</p><p><img src="2773317-20220319204250534-1412215.png" alt="img"></p><p> 使用sort -rn 倒序将分区利用率从大到小排序，使用head命令将利用率最高的分区取出来</p><p><img src="2773317-20220319204511959-279920590.png" alt="img"></p><p> 编写成脚本</p><p><img src="2773317-20220319204940822-937470107.png" alt="img"></p><p> <img src="2773317-20220319205043698-75513766.png" alt="img"></p><h1 id="编写脚本-systeminfo-sh，显示当前主机系统信息，包括-主机名，IPv4地址，操作系统版本，内核版本，CPU型号，内存大小，硬盘大小"><a href="#编写脚本-systeminfo-sh，显示当前主机系统信息，包括-主机名，IPv4地址，操作系统版本，内核版本，CPU型号，内存大小，硬盘大小" class="headerlink" title=" 编写脚本 systeminfo.sh，显示当前主机系统信息，包括:主机名，IPv4地址，操作系统版本，内核版本，CPU型号，内存大小，硬盘大小"></a><font size=4> 编写脚本 systeminfo.sh，显示当前主机系统信息，包括:主机名，IPv4地址，操作系统版本，内核版本，CPU型号，内存大小，硬盘大小</font></h1><p> 使用命令将主机名 ip4地址 os版本 内核版本 cpu 内存和硬盘大小显示出来</p><p>主机名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># hostname``ansible</span><br></code></pre></td></tr></table></figure><p>ip4地址</p><p><img src="2773317-20220319211228782-1969476389.png" alt="img"></p><p> os版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># cat /etc/centos-release``CentOS Linux release 7.9.2009 (Core)</span><br></code></pre></td></tr></table></figure><p>内核版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># uname -r``3.10.0-1160.el7.x86_64</span><br></code></pre></td></tr></table></figure><p>cpu型号</p><p><img src="2773317-20220319211753616-789950823.png" alt="img"></p><p> 内存大小</p><p><img src="2773317-20220319212211578-443988692.png" alt="img"></p><p> 硬盘大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible ~]<span class="hljs-comment"># lsblk | sed -rn ``&#x27;s/.*(50G).*/\1/p&#x27;``50G</span><br></code></pre></td></tr></table></figure><p>写成脚本</p><p><img src="2773317-20220319212809917-234209645.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第二周作业</title>
    <link href="/2022/05/16/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/05/16/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p><strong>显示/etc目录下，以非字母开头，后面跟了一个字母以及其它任意长度任意字符的文件或目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[root@ansible etc]<span class="hljs-comment"># ll [^[:alpha:]][:alpha:]?*</span><br><span class="hljs-built_in">ls</span>: 无法访问[^[:alpha:]][:alpha:]*: 没有那个文件或目录<br>[root@ansible etc]<span class="hljs-comment"># touch 1adj356</span><br>[root@ansible etc]<span class="hljs-comment"># ll [^[:alpha:]][:alpha:]?*</span><br>-rw-r--r-- 1 root root 0 3月 10 14:00 1adj356<br></code></pre></td></tr></table></figure><p><strong>复制/etc目录下所有以p开头，以非数字结尾的文件或目录到/tmp/mytest1目录中。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible etc]<span class="hljs-comment"># mkdir /tmp/mytest1</span><br><br>[root@ansible etc]<span class="hljs-comment"># cp -r p?*[^[:digit:]] /tmp/mytest1/</span><br><br>[root@ansible etc]<span class="hljs-comment"># cd /tmp/mytest1/</span><br>[root@ansible mytest1]<span class="hljs-comment"># ll</span><br>总用量 52<br>drwxr-xr-x 2 root root 4096 3月 10 14:08 pam.d<br>-rw-r--r-- 1 root root 68 3月 10 14:08 papersize<br>-rw-r--r-- 1 root root 2912 3月 10 14:08 passwd<br>-rw-r--r-- 1 root root 2869 3月 10 14:08 passwd-<br>-rw-r--r-- 1 root root 1362 3月 10 14:08 pbm2ppa.conf<br>-rw-r--r-- 1 root root 2872 3月 10 14:08 pinforc<br>drwxr-xr-x 12 root root 151 3月 10 14:08 pki<br>drwxr-xr-x 2 root root 28 3月 10 14:08 plymouth<br>-rw-r--r-- 1 root root 6300 3月 10 14:08 pnm2ppa.conf<br>drwxr-xr-x 2 root root 6 3月 10 14:08 popt.d<br>drwxr-xr-x 2 root root 154 3月 10 14:08 postfix<br>drwxr-xr-x 3 root root 219 3月 10 14:08 ppp<br>drwxr-xr-x 2 root root 105 3月 10 14:08 prelink.conf.d<br>-rw-r--r-- 1 root root 233 3月 10 14:08 printcap<br>-rw-r--r-- 1 root root 1819 3月 10 14:08 profile<br>drwxr-xr-x 2 root root 4096 3月 10 14:08 profile.d<br>-rw-r--r-- 1 root root 6545 3月 10 14:08 protocols<br>drwxr-xr-x 2 root root 79 3月 10 14:08 pulse<br>drwxr-xr-x 2 root root 23 3月 10 14:08 purple<br>drwxr-xr-x 2 root root 35 3月 10 14:08 python<br></code></pre></td></tr></table></figure><p><strong>将/etc/issue文件中的内容转换为大写后保存至/tmp/issue.out文件中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ansible mytest1]<span class="hljs-comment"># cat /etc/issue | tr &#x27;[a-z]&#x27; &#x27;[A-Z]&#x27; &gt; /tmp/issue.out</span><br>[root@ansible mytest1]<span class="hljs-comment"># cat /tmp/issue.out</span><br>\S<br>KERNEL \R ON AN \M<br></code></pre></td></tr></table></figure><p><strong>请总结描述用户和组管理类命令的使用方法并完成以下练习：</strong></p><p><strong>创建组distro，其GID为2019</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd -g 2019 distro<br></code></pre></td></tr></table></figure><p><strong>创建用户mandriva, 其ID号为1005；基本组为distro</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -u 1005 -g distro mandriva<br></code></pre></td></tr></table></figure><p><strong>创建用户mageia，其ID号为1100，家目录为/home/linux</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -u 1100 -d /home/linux mageia<br></code></pre></td></tr></table></figure><p><strong>给用户mageia添加密码，密码为mageedu，并设置用户密码7天后过期</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> mageedu | passwd --stdin mageia ; chage -M 7 mageia<br></code></pre></td></tr></table></figure><p><strong>删除mandriva，但保留其家目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">userdel mandriva<br></code></pre></td></tr></table></figure><p><strong>创建用户slackware，其ID号为2002，基本组为distro，附加组peguin</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd peguin ; useradd -u 2002 -g distro -G peguin slackware<br></code></pre></td></tr></table></figure><p><strong>修改slackware的默认shell为/bin/tcsh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod -s /bin/tcsh slackware<br></code></pre></td></tr></table></figure><p><strong>为用户slackware新增附加组admins，并设置不可登陆</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd admins ;usermod -G admins -s /sbin/nologin slackware<br></code></pre></td></tr></table></figure><p><strong>创建用户user1、user2、user3。在/data/下创建目录test</strong></p><p><strong>目录/data/test属主、属组为user1</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> user1 /data/test/ ;<span class="hljs-built_in">chgrp</span> user1 /data/test<br></code></pre></td></tr></table></figure><p><strong>在目录属主、属组不变的情况下，user2对文件有读写权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setfacl -m u:user2:rw /data/test/<br></code></pre></td></tr></table></figure><p><strong>user1在/data/test目录下创建文件a1.sh, a2.sh, a3.sh, a4.sh，设置所有用户都不可删除1.sh，2.sh文件、除了user1及root之外，所有用户都不可删除a3.sh, a4.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">chattr +a a&#123;1..2&#125;.sh <br><span class="hljs-built_in">chmod</span> o+t /data/test<br></code></pre></td></tr></table></figure><p> <strong>user3增加附加组user1，同时要求user1不能访问/data/test目录及其下所有文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod -a -G user1 user3<br>[root@ansible <span class="hljs-built_in">test</span>]<span class="hljs-comment"># id user3</span><br>uid=2005(user3) gid=2005(user3) 组=2005(user3),2003(user1)<br>setfacl -m u:user1:--- /data/test/<br></code></pre></td></tr></table></figure><p><strong>清理/data/test目录及其下所有文件的acl权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">chattr -a a&#123;1..2&#125;.sh;setfacl -Rb /data/test/<br><br>lsattr ;getfacl /data/test/<br>---------------- ./a1.sh<br>---------------- ./a2.sh<br>---------------- ./a3.sh<br>---------------- ./a4.sh<br>getfacl: Removing leading <span class="hljs-string">&#x27;/&#x27;</span> from absolute path names<br>\<span class="hljs-comment"># file: data/test/</span><br>\<span class="hljs-comment"># owner: user1</span><br>\<span class="hljs-comment"># group: user1</span><br>\<span class="hljs-comment"># flags: --t</span><br>user::rwx<br>group::r-x<br>other::r--<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PXE自动化部署centos7</title>
    <link href="/2022/05/16/PXE%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2centos7/"/>
    <url>/2022/05/16/PXE%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2centos7/</url>
    
    <content type="html"><![CDATA[<h1 id="PXE自动化部署centos7"><a href="#PXE自动化部署centos7" class="headerlink" title="PXE自动化部署centos7"></a><strong>PXE自动化部署centos7</strong></h1><span id="more"></span><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>安装httpd,dhcp,tftp-server,syslinux,system-config-kickstart</p><p>在 <code>/var/www/html</code>路径下新建 <code>centos/7/os/x86_64（mkdir /var/www/html/centos/7/os/x86_64 -p）</code></p><p>将centos镜像挂载至mnt目录下，拷贝所有文件至<code>/var/www/html/centos/7/os/x86_64</code>目录下 <code>(cp -rv /mnt/* /var/www/html/centos/7/os/x86_64/)</code></p><p>关闭防火墙，关闭selinux,启动httpd服务，确保网页可以访问到x86_64目录下的所有文件，如图所示</p><p><img src="2773317-20220507142024621-78874012-16527944243901.png" alt="2773317-20220507142024621-78874012"></p><h2 id="配置DHCP"><a href="#配置DHCP" class="headerlink" title="配置DHCP"></a>配置DHCP</h2><p>制作DHCP文件，<code>cp /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example /etc/dhcp/dhcpd.conf</code></p><p>按如下要求修改dhcpd.conf文件 <a href="%E5%85%B6%E4%B8%ADnext-server%E4%B8%BAtftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%80%E5%9C%A8%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8IP">^注释1</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># option definitions common to all supported networks...</span><br>         option domain-name <span class="hljs-string">&quot;example.org&quot;</span>;<br>         option domain-name-servers 10.0.6.26；<br>         子网配置<br>        <span class="hljs-comment"># DHCP server to understand the network topology.</span><br>          subnet 10.1.81.0 netmask 255.255.255.0 &#123;<br>          range 10.1.81.20 10.1.81.28;<br>          option routers 10.1.81.254;<br>          next-server 10.1.81.126;<br>          filename <span class="hljs-string">&quot;pxelinux.0&quot;</span>;<br>          &#125;<br></code></pre></td></tr></table></figure><p>在客户端使用<code>dhclient -s serverip</code> <a href="%E5%88%86%E9%85%8D%E9%9D%99%E6%80%81%E5%9C%B0%E5%9D%80%E7%9A%84LINUX%E4%B8%BB%E6%9C%BA%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E6%AD%A4%E5%91%BD%E4%BB%A4%E6%9D%A5%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81IP%EF%BC%8C%E4%BD%BF%E7%94%A8%E9%9C%80%E8%B0%A8%E6%85%8E">^注释2</a>命令来测试能否正常从dhcp server自动获取地址</p><h2 id="system-config-kickstart文件制作"><a href="#system-config-kickstart文件制作" class="headerlink" title="system-config-kickstart文件制作"></a>system-config-kickstart文件制作</h2><p>基本设置，语言，时区，root密码等，勾选text mod后可以使用纯文本界面安装，时区 语言可以等文件制作完毕后手动修改</p><p><img src="2773317-20220507144820543-1281566390.png" alt="基本设置，语言，时区，root密码等，勾选text mod后可以使用纯文本界面安装，时区 语言可以等文件制作完毕后手动修改"></p><p> 选择安装源，路径选择网页访问路径</p><p><img src="2773317-20220507145033400-1193271792.png" alt="img"></p><p>选择安装新的启动引导，使用net.ifnames=0将网卡名称从ens33修改为eth0</p><p><img src="2773317-20220507145452364-1064864821.png" alt="img"></p><p> 自定义分区，按实际需求分配</p><p><img src="2773317-20220507145440214-1943814160.png" alt="img"></p><p>网络按照实际需求分配</p><p><img src="2773317-20220507145558364-1668217258.png" alt="img"></p><p> 关闭防火墙和selinux</p><p><img src="2773317-20220507145711560-578695817.png" alt="img"></p><p> 选择需要安装的软件包（此处有BUG，需要将yum源的名称改成“development”才能正常显示）</p><p><img src="2773317-20220507145833389-804125183.png" alt="img"></p><p> <img src="2773317-20220507150108158-1280362437.png" alt="img"></p><p> 安装前预配置</p><p><img src="2773317-20220507150150358-317886855.png" alt="img"></p><p> 安装后执行的命令</p><p><img src="2773317-20220507150218205-1245540321.png" alt="img"></p><p> 将文件保存至root家目录，命名为ks.cfg</p><p><img src="2773317-20220507150343289-1792403542.png" alt="img"></p><p>在%post %end区域间可以写入安装系统后需要执行的命令</p><p><img src="2773317-20220507150508403-698694859.png" alt="img"></p><p> 在/var/www/html下新建ks目录，将制作完毕的ks文件放至/var/www/html/ks目录下，打开网页 确保可以通过网页访问ks文件<a href="%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%60ksvalidator%60%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8BKS%E6%96%87%E4%BB%B6%E8%AF%AD%E6%B3%95%E6%98%AF%E5%90%A6%E6%9C%89%E9%94%99%E8%AF%AF">^注释3</a></p><p> <img src="2773317-20220507151030963-755327847.png" alt="img"></p><p> <img src="2773317-20220507151044436-87220999.png" alt="img"></p><h2 id="准备PXE启动相关文件"><a href="#准备PXE启动相关文件" class="headerlink" title="准备PXE启动相关文件"></a>准备PXE启动相关文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /var/lib/tftpboot/pxelinux.cfg/<br><br><span class="hljs-built_in">cp</span> /usr/share/syslinux/&#123;pxelinux.0,menu.c32&#125; /var/lib/tftpboot/<br><br><span class="hljs-built_in">cp</span> /var/www/html/centos/7/os/x86_64/isolinux/&#123;vmlinuz,initrd.img&#125; /var/lib/tftpboot/<br><br><span class="hljs-built_in">cp</span> /var/www/html/centos/7/os/x86_64/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg/default<br></code></pre></td></tr></table></figure><p>最终目录列表如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">/var/lib/tftpboot/<br>├── initrd.img<br>├── menu.c32<br>├── pxelinux.0<br>├── pxelinux.cfg<br>│   └── default<br>└── vmlinuz<br></code></pre></td></tr></table></figure><p>准备启动菜单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /var/lib/tftpboot/pxelinux.cfg/default<br><br>default menu.c32<br><span class="hljs-built_in">timeout</span> 600<br>menu title PXE INSTALL MENU<br>label auto<br>menu label ^Auto Install CentOS 7<br>kernel vmlinuz<br>append initrd=initrd.img ks=http://10.1.81.126/ks/ks.cfg<br>label manual<br>menu label ^Manual Install CentOS 7<br>kernel vmlinuz<br>append initrd=initrd.img inst.repo=http://10.1.81.126/centos/7/os/x86_64<br>label <span class="hljs-built_in">local</span><br>menu default<br>menu label ^Boot from <span class="hljs-built_in">local</span> drive<br>localboot 0xffff<br></code></pre></td></tr></table></figure><p>启动tftp服务，使用客户端测试tftp</p><p><font color=#0000FF>客户端测试</font></p>]]></content>
    
    
    <categories>
      
      <category>自动化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINUX</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
